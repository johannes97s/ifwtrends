n_windows = 348, wait = 20, retry = 10,
prevent_window_shrinkage = TRUE
)
d2 <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = seq(Sys.Date(), length.out = 2, by = "-90 days")[2],
stepsize = "1 day", windowsize = "3 months",
n_windows = 12, wait = 20, retry = 10,
prevent_window_shrinkage = FALSE
)
dd <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(d), trendecon:::aggregate_windows(d2))
# download weakly series
w <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = from,
stepsize = "11 weeks", windowsize = "5 years",
n_windows = 68, wait = 20, retry = 10,
prevent_window_shrinkage = TRUE
)
w2 <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = seq(Sys.Date(), length.out = 2, by = "-1 year")[2],
stepsize = "1 week", windowsize = "1 year",
n_windows = 12, wait = 20, retry = 10,
prevent_window_shrinkage = FALSE
)
ww <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(w), trendecon:::aggregate_windows(w2))
# download monthly series
m <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = from,
stepsize = "1 month", windowsize = "15 years",
n_windows = 12, wait = 20, retry = 10,
prevent_window_shrinkage = FALSE
)
m2 <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = from,
stepsize = "1 month", windowsize = "20 years",
n_windows = 12, wait = 20, retry = 10,
prevent_window_shrinkage = FALSE
)
mm <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(m), trendecon:::aggregate_windows(m2))
dd <- select(dd, -n)
ww <- select(ww, -n)
mm <- select(mm, -n)
ww %>%
mutate(week = week(time), year = year(time)) %>%
filter(week <= 52) %>%
select(time, value) -> ww
dd <- ts_regular(ts_dts(dd))
dd$value <- 0.5*(na.locf(dd$value,fromLast =TRUE) + na.locf(dd$value))
ww <-  ts_regular(ts_dts(ww))
ww$value <- 0.5*(na.locf(ww$value,fromLast =TRUE) + na.locf(ww$value))
mm <-  ts_regular(ts_dts(mm))
mm$value <- 0.5*(na.locf(mm$value,fromLast =TRUE) + na.locf(mm$value))
wd <- tempdisagg::td(ww ~ dd, method = "fast", conversion = "mean")
wd <- predict(wd)
mwd <- tempdisagg::td(mm ~ wd, method = "fast", conversion = "mean")
mwd <- predict(mwd)
mwd %>%
mutate(time = floor_date(time, "month")) %>%
group_by(time) %>%
mutate(monthl = mean(value)) %>%
select(-value) %>%
unique() %>%
left_join(ts_gtrends(keyword = keyword, geo = geo, time = "2006-01-01 2021-08-25", retry = 5), by = "time") %>%
left_join(mm, by = "time")-> mwd_mon
ggplot(pivot_longer(mwd_mon, cols = -time, names_to = "id", values_to = "value"), aes(x = time, y = value, color = id)) +
geom_line()
mwd_mon
correlate(mwd_mon$monthl, mwd_mon$value.x)
keyword = c("arbeitslos")
geo = "DE"
from <- "2011-01-01"
d <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = from,
stepsize = "15 days", windowsize = "6 months",
n_windows = 348, wait = 20, retry = 10,
prevent_window_shrinkage = TRUE
)
d2 <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = seq(Sys.Date(), length.out = 2, by = "-90 days")[2],
stepsize = "1 day", windowsize = "3 months",
n_windows = 12, wait = 20, retry = 10,
prevent_window_shrinkage = FALSE
)
dd <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(d), trendecon:::aggregate_windows(d2))
# download weakly series
w <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = from,
stepsize = "11 weeks", windowsize = "5 years",
n_windows = 68, wait = 20, retry = 10,
prevent_window_shrinkage = TRUE
)
w2 <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = seq(Sys.Date(), length.out = 2, by = "-1 year")[2],
stepsize = "1 week", windowsize = "1 year",
n_windows = 12, wait = 20, retry = 10,
prevent_window_shrinkage = FALSE
)
ww <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(w), trendecon:::aggregate_windows(w2))
# download monthly series
m <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = from,
stepsize = "1 month", windowsize = "15 years",
n_windows = 12, wait = 20, retry = 10,
prevent_window_shrinkage = FALSE
)
m2 <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = from,
stepsize = "1 month", windowsize = "20 years",
n_windows = 12, wait = 20, retry = 10,
prevent_window_shrinkage = FALSE
)
mm <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(m), trendecon:::aggregate_windows(m2))
dd <- select(dd, -n)
ww <- select(ww, -n)
mm <- select(mm, -n)
save.image("~/ifwtrends/1st_try.RData")
ww %>%
mutate(week = week(time), year = year(time)) %>%
filter(week <= 52) %>%
select(time, value) -> ww
dd <- ts_regular(ts_dts(dd))
dd$value <- 0.5*(na.locf(dd$value,fromLast =TRUE) + na.locf(dd$value))
ww <-  ts_regular(ts_dts(ww))
ww$value <- 0.5*(na.locf(ww$value,fromLast =TRUE) + na.locf(ww$value))
mm <-  ts_regular(ts_dts(mm))
mm$value <- 0.5*(na.locf(mm$value,fromLast =TRUE) + na.locf(mm$value))
wd <- tempdisagg::td(ww ~ dd, method = "fast", conversion = "mean")
wd <- predict(wd)
mwd <- tempdisagg::td(mm ~ wd, method = "fast", conversion = "mean")
mwd <- predict(mwd)
write.xlsx(mwd, "mwd.xlsx")
write.xlsx(wd, "wd.xlsx")
write.xlsx(mm, "mm.xlsx")
write.xlsx(ww, "ww.xlsx")
mwd %>%
mutate(time = floor_date(time, "month")) %>%
group_by(time) %>%
mutate(monthl = mean(value)) %>%
select(-value) %>%
unique() %>%
left_join(ts_gtrends(keyword = keyword, geo = geo, time = "2006-01-01 2021-08-25", retry = 5), by = "time") %>%
left_join(mm, by = "time")-> mwd_mon
ggplot(pivot_longer(mwd_mon, cols = -time, names_to = "id", values_to = "value"), aes(x = time, y = value, color = id)) +
geom_line()
ts_gtrends(keyword = keyword, geo = geo, time = "2006-01-01 2021-08-25")
correlate(mwd_mon$monthl, mwd_mon$value.x)
mwd_mon
keyword = c("Wirtschaftskrise")
geo = "DE"
from <- "2011-01-01"
d <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = from,
stepsize = "15 days", windowsize = "6 months",
n_windows = 348, wait = 20, retry = 10,
prevent_window_shrinkage = TRUE
)
d2 <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = seq(Sys.Date(), length.out = 2, by = "-90 days")[2],
stepsize = "1 day", windowsize = "3 months",
n_windows = 12, wait = 20, retry = 10,
prevent_window_shrinkage = FALSE
)
dd <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(d), trendecon:::aggregate_windows(d2))
# download weakly series
w <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = from,
stepsize = "11 weeks", windowsize = "5 years",
n_windows = 68, wait = 20, retry = 10,
prevent_window_shrinkage = TRUE
)
w2 <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = seq(Sys.Date(), length.out = 2, by = "-1 year")[2],
stepsize = "1 week", windowsize = "1 year",
n_windows = 12, wait = 20, retry = 10,
prevent_window_shrinkage = FALSE
)
ww <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(w), trendecon:::aggregate_windows(w2))
# download monthly series
m <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = from,
stepsize = "1 month", windowsize = "15 years",
n_windows = 12, wait = 20, retry = 10,
prevent_window_shrinkage = FALSE
)
m2 <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = from,
stepsize = "1 month", windowsize = "20 years",
n_windows = 12, wait = 20, retry = 10,
prevent_window_shrinkage = FALSE
)
mm <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(m), trendecon:::aggregate_windows(m2))
dd <- select(dd, -n)
ww <- select(ww, -n)
mm <- select(mm, -n)
ww %>%
mutate(week = week(time), year = year(time)) %>%
filter(week <= 52) %>%
select(time, value) -> ww
dd <- ts_regular(ts_dts(dd))
dd$value <- 0.5*(na.locf(dd$value,fromLast =TRUE) + na.locf(dd$value))
ww <-  ts_regular(ts_dts(ww))
ww$value <- 0.5*(na.locf(ww$value,fromLast =TRUE) + na.locf(ww$value))
mm <-  ts_regular(ts_dts(mm))
mm$value <- 0.5*(na.locf(mm$value,fromLast =TRUE) + na.locf(mm$value))
wd <- tempdisagg::td(ww ~ dd, method = "fast", conversion = "mean")
wd <- predict(wd)
mwd <- tempdisagg::td(mm ~ wd, method = "fast", conversion = "mean")
mwd <- predict(mwd)
mwd %>%
mutate(time = floor_date(time, "month")) %>%
group_by(time) %>%
mutate(monthl = mean(value)) %>%
select(-value) %>%
unique() %>%
left_join(ts_gtrends(keyword = keyword, geo = geo, time = "2006-01-01 2021-08-25", retry = 5), by = "time") %>%
left_join(mm, by = "time")-> mwd_mon
mwd_mon
ggplot(pivot_longer(mwd_mon, cols = -time, names_to = "id", values_to = "value"), aes(x = time, y = value, color = id)) +
geom_line()
ts_gtrends(keyword = keyword, geo = geo, time = "2006-01-01 2021-08-25")
correlate(mwd_mon$monthl, mwd_mon$value.x)
keyword = c("Wirtschaftskrise" , "arbeitslos")
geo = "DE"
from <- "2011-01-01"
d <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = from,
stepsize = "15 days", windowsize = "6 months",
n_windows = 348, wait = 20, retry = 10,
prevent_window_shrinkage = TRUE
)
d2 <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = seq(Sys.Date(), length.out = 2, by = "-90 days")[2],
stepsize = "1 day", windowsize = "3 months",
n_windows = 12, wait = 20, retry = 10,
prevent_window_shrinkage = FALSE
)
dd <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(d), trendecon:::aggregate_windows(d2))
# download weakly series
w <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = from,
stepsize = "11 weeks", windowsize = "5 years",
n_windows = 68, wait = 20, retry = 10,
prevent_window_shrinkage = TRUE
)
w2 <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = seq(Sys.Date(), length.out = 2, by = "-1 year")[2],
stepsize = "1 week", windowsize = "1 year",
n_windows = 12, wait = 20, retry = 10,
prevent_window_shrinkage = FALSE
)
ww <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(w), trendecon:::aggregate_windows(w2))
# download monthly series
m <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = from,
stepsize = "1 month", windowsize = "15 years",
n_windows = 12, wait = 20, retry = 10,
prevent_window_shrinkage = FALSE
)
m2 <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = from,
stepsize = "1 month", windowsize = "20 years",
n_windows = 12, wait = 20, retry = 10,
prevent_window_shrinkage = FALSE
)
mm <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(m), trendecon:::aggregate_windows(m2))
dd <- select(dd, -n)
ww <- select(ww, -n)
mm <- select(mm, -n)
ww %>%
mutate(week = week(time), year = year(time)) %>%
filter(week <= 52) %>%
select(time, value) -> ww
dd <- ts_regular(ts_dts(dd))
dd$value <- 0.5*(na.locf(dd$value,fromLast =TRUE) + na.locf(dd$value))
ww <-  ts_regular(ts_dts(ww))
ww$value <- 0.5*(na.locf(ww$value,fromLast =TRUE) + na.locf(ww$value))
mm <-  ts_regular(ts_dts(mm))
mm$value <- 0.5*(na.locf(mm$value,fromLast =TRUE) + na.locf(mm$value))
wd <- tempdisagg::td(ww ~ dd, method = "fast", conversion = "mean")
wd <- predict(wd)
mwd <- tempdisagg::td(mm ~ wd, method = "fast", conversion = "mean")
mwd <- predict(mwd)
pca <- function(keywords = NA,
categories = 0,
start = as.Date("2006-01-01"),
end,
components = max(length(keywords), length(categories))){
stopifnot("Nur keywords oder categories darf angegeben werden" = is.na(keywords) | categories == 0)
dates = seq.Date(as.Date(start), as.Date(end), by = "month")
dat = tibble(date = NULL, key = NULL, value = NULL)
for (kw in keywords){
for (cat in categories){
as_tibble(gtrends(
keyword = kw,
category = cat,
geo = "DE",
time = "all")$interest_over_time)  -> temp
if (NROW(temp) == 0) stop(str_c("Keine Daten für Kategorie ", cat))
temp %>%
mutate(date = as_date(date)) %>%
select(date = date, key = any_of(c("keyword", "category")), value = hits) %>%
filter(date %in% dates) -> temp
dat <- bind_rows(dat, temp)
}
}
return(pivot_wider(ts_prcomp(dat), names_from = id, values_from = value)[1:(components+1)])
}
keywords = c("abitur", "abiturnote", "NC")
start_series = as.Date("2004-01-01")
period <-  seq.Date(as.Date("2005-01-01"), as.Date("2006-01-01"), by = "month")
n = 212
d <- as.Date("2015-01-01")
pca(keywords = keywords, start = start_series, end = d) %>%
select(-time) -> temp
library(tidyverse)
library(gtrendsR)
library(trendecon)
library(tsbox)
library(openxlsx)
library(corrr)
library(lubridate)
keywords = c("abitur", "abiturnote", "NC")
start_series = as.Date("2004-01-01")
period <-  seq.Date(as.Date("2005-01-01"), as.Date("2006-01-01"), by = "month")
n = 212
d <- as.Date("2015-01-01")
pca(keywords = keywords, start = start_series, end = d) %>%
select(-time) -> temp
temp
# pca(keywords = c("abitur", "abiturnote", "NC"), end = "2021-01-01")
tb <- roll(keywords = c("abitur", "abiturnote", "NC"),
start_period = "2007-01-01",
end = "2008-01-01")
roll <- function(keywords = NA,
categories = 0,
start_series = as.Date("2006-01-01"),
start_period = as.Date("2014-01-01"),
end = as.Date("2021-01-01"),
components = max(length(keywords), length(categories))){
period <-  seq.Date(as.Date(start_period), as.Date(end), by = "month")
dates <- seq.Date(as.Date("2006-01-01"), as.Date(end), by = "month")
pc <- tibble(date = dates)
n <- length(dates)#L?nge der ganzen Reihe
for (i in period){
d <- as.Date(i, origin = "1970-01-01")
pca(keywords = keywords,
categories = categories,
start = start_series,
end = d,
components = components) %>%
select(-time) -> temp
rest <- matrix(NA, n - nrow(temp), components)
colnames(rest) <- str_c("PC", 1:components)
rest <- as_tibble(rest)
temp <- bind_rows(temp, rest)
names(temp) <- str_c(names(temp), " to ", d)
pc <- bind_cols(pc, temp)
}
pc
}
# pca(keywords = c("abitur", "abiturnote", "NC"), end = "2021-01-01")
tb <- roll(keywords = c("abitur", "abiturnote", "NC"),
start_period = "2007-01-01",
end = "2008-01-01")
tb
print(tb, n = 26)
library(tidyverse)
library(gtrendsR)
library(trendecon)
library(tsbox)
library(openxlsx)
library(corrr)
library(lubridate)
library(zoo)
daily_series <- function(keyword = c("Wirtschaftskrise"),
geo = "DE",
from = "2006-01-01"){
d <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = from,
stepsize = "15 days", windowsize = "6 months",
n_windows = 348, wait = 20, retry = 10,
prevent_window_shrinkage = TRUE
)
d2 <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = seq(Sys.Date(), length.out = 2, by = "-90 days")[2],
stepsize = "1 day", windowsize = "3 months",
n_windows = 12, wait = 20, retry = 10,
prevent_window_shrinkage = FALSE
)
dd <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(d), trendecon:::aggregate_windows(d2))
# download weekly series
w <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = from,
stepsize = "11 weeks", windowsize = "5 years",
n_windows = 68, wait = 20, retry = 10,
prevent_window_shrinkage = TRUE
)
w2 <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = seq(Sys.Date(), length.out = 2, by = "-1 year")[2],
stepsize = "1 week", windowsize = "1 year",
n_windows = 12, wait = 20, retry = 10,
prevent_window_shrinkage = FALSE
)
ww <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(w), trendecon:::aggregate_windows(w2))
# download monthly series
m <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = from,
stepsize = "1 month", windowsize = "15 years",
n_windows = 12, wait = 20, retry = 10,
prevent_window_shrinkage = FALSE
)
m2 <- trendecon:::ts_gtrends_windows(
keyword = keyword,
geo = geo,
from = from,
stepsize = "1 month", windowsize = "20 years",
n_windows = 12, wait = 20, retry = 10,
prevent_window_shrinkage = FALSE
)
mm <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(m), trendecon:::aggregate_windows(m2))
dd <- select(dd, -n)
ww <- select(ww, -n)
mm <- select(mm, -n)
# ww %>%
#   mutate(week = week(time), year = year(time)) %>%
#   filter(week <= 52) %>%
#   select(time, value) -> ww
dd <- ts_regular(ts_dts(dd))
dd$value <- 0.5*(na.locf(dd$value,fromLast =TRUE) + na.locf(dd$value))
ww <-  ts_regular(ts_dts(ww))
ww$value <- 0.5*(na.locf(ww$value,fromLast =TRUE) + na.locf(ww$value))
mm <-  ts_regular(ts_dts(mm))
mm$value <- 0.5*(na.locf(mm$value,fromLast =TRUE) + na.locf(mm$value))
# mm %>%
#   mutate(week = week(time), year = year(time)) %>%
#   group_by(week, year) %>%
#   mutate(value = mean(value)) %>%
#   ungroup() %>%
#   select( - time) %>%
#   filter(week <= 52) %>%
#   unique() %>%
#   bind_cols(time = ww$time) %>%
#   select(time, value)-> mm
wd <- tempdisagg::td(ww ~ dd, method = "fast", conversion = "mean")
wd <- predict(wd)
mwd <- tempdisagg::td(mm ~ wd, method = "fast", conversion = "mean")
mwd <- predict(mwd)
mwd
}
mwd %>%
mutate(month= floor_date(time, "month")) %>%
group_by(month) %>%
mutate(monthl_aggr = mean(value)) %>%
ungroup() %>%
select(-month) %>%
left_join(ts_gtrends(keyword = keyword, geo = geo, time = "2006-01-01 2021-08-26", retry = 10), by = "time") -> mwd_mon
gtrends(category = 651, geo = "DE")
