#         start = start_series,
#         geo = geo,
#         end = d,
#         components = components) %>%
#       select(-date) -> temp
#     rest <- matrix(NA, n - nrow(temp), components)
#     colnames(rest) <- str_c("ser", 1:components)
#     rest <- as_tibble(rest)
#     temp <- bind_rows(temp, rest)
#     names(temp) <- str_c(names(temp), " to ", d)
#     pc <- bind_cols(pc, temp)
#   }
# }
# pc
}
roll(keyword = "ikea")
roll <- function(keyword = NA,
category = 0,
geo = "DE",
start_series = "2006-01-01",
start_period = "2014-01-01",
end = Sys.Date(),
fun = trendecon::ts_gtrends){
period <-  seq.Date(as.Date(start_period), as.Date(end), by = "month")
n <- length(seq.Date(as.Date(start_series), as.Date(end), by = "month"))
print(keyword)
f <- function(d) fun(keyword = keyword,
category = category,
geo = geo,
time = strinr::str_c(start_series," ", d))
tl <- lapply(period, f)
tl <- lapply(tl, function(x){
rest <- matrix(NA, n - nrow(x), 1)
colnames(rest) <- "value"
rest <- as_tibble(rest)
bind_rows(x, as_tibble(rest))} )
as_tibble(tl, .name_repair = "universal")
# if (pc){
#   for (i in period){
#     d <- as.Date(i, origin = "1970-01-01")
#     pca(keywords = keywords,
#         categories = categories,
#         start = start_series,
#         geo = geo,
#         end = d,
#         components = components) %>%
#         select(-date) -> temp
#     rest <- matrix(NA, n - nrow(temp), components)
#     colnames(rest) <- str_c("PC", 1:components)
#     rest <- as_tibble(rest)
#     temp <- bind_rows(temp, rest)
#     names(temp) <- str_c(names(temp), " to ", d)
#     pc <- bind_cols(pc, temp)
#   }
# }
# if (!pc){
#   for (i in period){
#     d <- as.Date(i, origin = "1970-01-01")
#     pca(keywords = keywords,
#         categories = categories,
#         start = start_series,
#         geo = geo,
#         end = d,
#         components = components) %>%
#       select(-date) -> temp
#     rest <- matrix(NA, n - nrow(temp), components)
#     colnames(rest) <- str_c("ser", 1:components)
#     rest <- as_tibble(rest)
#     temp <- bind_rows(temp, rest)
#     names(temp) <- str_c(names(temp), " to ", d)
#     pc <- bind_cols(pc, temp)
#   }
# }
# pc
}
roll <- function(keyword = NA,
category = 0,
geo = "DE",
start_series = "2006-01-01",
start_period = "2014-01-01",
end = Sys.Date(),
fun = trendecon::ts_gtrends){
period <-  seq.Date(as.Date(start_period), as.Date(end), by = "month")
n <- length(seq.Date(as.Date(start_series), as.Date(end), by = "month"))
print(keyword)
f <- function(d) fun(keyword = keyword,
category = category,
geo = geo,
time = strinr::str_c(start_series," ", d))
tl <- lapply(period, f)
tl <- lapply(tl, function(x){
rest <- matrix(NA, n - nrow(x), 1)
colnames(rest) <- "value"
rest <- as_tibble(rest)
bind_rows(x, as_tibble(rest))} )
as_tibble(tl, .name_repair = "universal")
# if (pc){
#   for (i in period){
#     d <- as.Date(i, origin = "1970-01-01")
#     pca(keywords = keywords,
#         categories = categories,
#         start = start_series,
#         geo = geo,
#         end = d,
#         components = components) %>%
#         select(-date) -> temp
#     rest <- matrix(NA, n - nrow(temp), components)
#     colnames(rest) <- str_c("PC", 1:components)
#     rest <- as_tibble(rest)
#     temp <- bind_rows(temp, rest)
#     names(temp) <- str_c(names(temp), " to ", d)
#     pc <- bind_cols(pc, temp)
#   }
# }
# if (!pc){
#   for (i in period){
#     d <- as.Date(i, origin = "1970-01-01")
#     pca(keywords = keywords,
#         categories = categories,
#         start = start_series,
#         geo = geo,
#         end = d,
#         components = components) %>%
#       select(-date) -> temp
#     rest <- matrix(NA, n - nrow(temp), components)
#     colnames(rest) <- str_c("ser", 1:components)
#     rest <- as_tibble(rest)
#     temp <- bind_rows(temp, rest)
#     names(temp) <- str_c(names(temp), " to ", d)
#     pc <- bind_cols(pc, temp)
#   }
# }
# pc
}
roll(keyword = "ikea")
roll <- function(keyword = NA,
category = 0,
geo = "DE",
start_series = "2006-01-01",
start_period = "2014-01-01",
end = Sys.Date(),
fun = trendecon::ts_gtrends){
period <-  seq.Date(as.Date(start_period), as.Date(end), by = "month")
n <- length(seq.Date(as.Date(start_series), as.Date(end), by = "month"))
print(keyword)
f <- function(d) fun(keyword = keyword,
category = category,
geo = geo,
time = stringr::str_c(start_series," ", d))
tl <- lapply(period, f)
tl <- lapply(tl, function(x){
rest <- matrix(NA, n - nrow(x), 1)
colnames(rest) <- "value"
rest <- as_tibble(rest)
bind_rows(x, as_tibble(rest))} )
as_tibble(tl, .name_repair = "universal")
# if (pc){
#   for (i in period){
#     d <- as.Date(i, origin = "1970-01-01")
#     pca(keywords = keywords,
#         categories = categories,
#         start = start_series,
#         geo = geo,
#         end = d,
#         components = components) %>%
#         select(-date) -> temp
#     rest <- matrix(NA, n - nrow(temp), components)
#     colnames(rest) <- str_c("PC", 1:components)
#     rest <- as_tibble(rest)
#     temp <- bind_rows(temp, rest)
#     names(temp) <- str_c(names(temp), " to ", d)
#     pc <- bind_cols(pc, temp)
#   }
# }
# if (!pc){
#   for (i in period){
#     d <- as.Date(i, origin = "1970-01-01")
#     pca(keywords = keywords,
#         categories = categories,
#         start = start_series,
#         geo = geo,
#         end = d,
#         components = components) %>%
#       select(-date) -> temp
#     rest <- matrix(NA, n - nrow(temp), components)
#     colnames(rest) <- str_c("ser", 1:components)
#     rest <- as_tibble(rest)
#     temp <- bind_rows(temp, rest)
#     names(temp) <- str_c(names(temp), " to ", d)
#     pc <- bind_cols(pc, temp)
#   }
# }
# pc
}
roll(keyword = "ikea")
roll(keyword = "ikea", end = "2015-01-01")
library(tidyverse)
library(gtrendsR)
library(trendecon)
library(tsbox)
library(zoo)
library(caret)
library(glmnet)
library(lattice)
roll(keyword = "ikea", end = "2015-01-01")
print(.Last.value, n = 120)
f<-function(d){
ts_gtrends(keyword = "ikea",
time = str_c("2006-01-01 ", d))
}
tl <- lapply(tl, function(x){
rest <- matrix(NA, 106 - nrow(x), 1)
colnames(rest) <- "value"
rest <- as_tibble(rest)
bind_rows(x, as_tibble(rest))} )
f<-function(d){
ts_gtrends(keyword = "ikea",
time = str_c("2006-01-01 ", d))
}
period <-  seq.Date(as.Date("2009-01-01"), as.Date("2010-01-01"), by = "month")
tl <- lapply(period, f)
tl
roll <- function(keyword = NA,
category = 0,
geo = "DE",
start_series = "2006-01-01",
start_period = "2014-01-01",
end = Sys.Date(),
fun = trendecon::ts_gtrends){
period <-  seq.Date(as.Date(start_period), as.Date(end), by = "month")
dates <- seq.Date(as.Date(start_series), as.Date(end), by = "month")
n <- length(dates)
print(keyword)
f <- function(d) fun(keyword = keyword,
category = category,
geo = geo,
time = stringr::str_c(start_series," ", d))
tl <- lapply(period, f)
tl <- lapply(tl, function(x){
select(x, -time)
rest <- matrix(NA, n - nrow(x), 1)
colnames(rest) <- "value"
rest <- as_tibble(rest)
bind_rows(x, as_tibble(rest))} )
as_tibble(tl, .name_repair = "universal")
# if (pc){
#   for (i in period){
#     d <- as.Date(i, origin = "1970-01-01")
#     pca(keywords = keywords,
#         categories = categories,
#         start = start_series,
#         geo = geo,
#         end = d,
#         components = components) %>%
#         select(-date) -> temp
#     rest <- matrix(NA, n - nrow(temp), components)
#     colnames(rest) <- str_c("PC", 1:components)
#     rest <- as_tibble(rest)
#     temp <- bind_rows(temp, rest)
#     names(temp) <- str_c(names(temp), " to ", d)
#     pc <- bind_cols(pc, temp)
#   }
# }
# if (!pc){
#   for (i in period){
#     d <- as.Date(i, origin = "1970-01-01")
#     pca(keywords = keywords,
#         categories = categories,
#         start = start_series,
#         geo = geo,
#         end = d,
#         components = components) %>%
#       select(-date) -> temp
#     rest <- matrix(NA, n - nrow(temp), components)
#     colnames(rest) <- str_c("ser", 1:components)
#     rest <- as_tibble(rest)
#     temp <- bind_rows(temp, rest)
#     names(temp) <- str_c(names(temp), " to ", d)
#     pc <- bind_cols(pc, temp)
#   }
# }
# pc
}
roll(keyword = "ikea", end = "2015-01-01")
roll(keyword = "ikea", end = "2014-05-01")
ts_gtrends(c("ikea", "saturn", "media", "amazom"))
map(function(x) x+2, 1:10)
map(1:10, function(x) x+2)
lapply(1:10, function(x) x+2)
for (i in 1:10) i+2
return(for (i in 1:10) i+2)
identical(map, lapply)
g_index <- function(
keywords = NA,
categories = 0,
geo = "DE",
end = Sys.Date(),
dat,
fd = T){
dates <- seq.Date(from = as.Date( "2006-01-01"), to = as.Date(end), by = "month")
dat <- dat %>%
mutate(time = as.yearqtr(as.Date(time))) %>%
filter(time <= as.yearqtr(as.Date(end))) %>%
mutate(time = as.Date(time)) %>%
mutate(value = log(value)) %>%
select(time, dat = value)
fit <- as_tibble(openxlsx::read.xlsx("~/ifwtrends/data/trend_67_0921.xlsx", detectDates = T)) %>%
select(time = date, fit)
g_dat2 <- ts_gtrends(keyword = keywords,
category = categories,
geo = "DE",
time = str_c("2006-01-01 ", end)) %>%
mutate(value = log(value))
#g_dat <- ts_pick(ts_prcomp(g_dat), "PC1")
g_dat <- g_dat2 %>%
left_join(fit, by = "time") %>%
mutate(time = as.yearqtr(time)) %>%
group_by(time, id) %>%
mutate(value = mean(value), fit = mean(fit)) %>%
ungroup() %>%
unique() %>%
mutate(time = as.Date(time)) %>%
filter(time <= max(dat$time)) %>%
mutate(adj = value - fit)
g_dat_adj <- g_dat %>%
select(id, time, adj) %>%
seas_adj(freq = "quart", method = "arima") %>%
rename(s_adj = value)
g_dat <- left_join(g_dat, g_dat_adj, by = c("time", "id")) %>%
left_join(dat, by = "time") %>%
unique()
# g_dat %>%
#   select(id, time, s_adj, dat) %>%
#   pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
#   #filter(id == "Koffer") %>%
#   ggplot(aes(x = time, y = values, color = id)) +
#   facet_grid(key ~., scales = "free_y" ) +
#   geom_line()
index <- g_dat %>%
select(id, time, s_adj, dat) #%>%
#group_by(id) %>%
#mutate(s_adj = c(0, diff(s_adj)), dat = c(0, diff(dat)))
# index %>%
#     pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
#     #filter(id == "Koffer") %>%
#     ggplot(aes(x = time, y = values, color = id)) +
#     facet_grid(key ~., scales = "free_y" ) +
#     geom_line()
index <- index %>%
pivot_wider(names_from = id, values_from = s_adj)
y <- index[[2]]
x <- as.matrix(index[-c(1:2)])
cv <- cv.glmnet(x, y, alpha = 0)
model <- glmnet(x, y, alpha = 0, lambda = cv$lambda.min1)
index<- bind_cols(index, as_tibble(predict(model, x, cv$lambda.min)))
# index %>%
#   select(time, dat, s1) %>%
#   pivot_longer(cols = -time, names_to = "key", values_to = "values") %>%
#   #filter(id == "Koffer") %>%
#   ggplot(aes(x = time, y = values, color =key)) +
#   #facet_grid(key ~., scales = "free_y" ) +
#   geom_line()
k = 4
fd_tb <- index %>%
select(time, dat, s1) %>%
mutate(dat = c(rep(0,k), diff(dat,k)), s1 = c(rep(0,k), diff(s1,k)))
# fd_tb %>%
#   pivot_longer(cols = -time, names_to = "key", values_to = "values") %>%
#   #filter(id == "Koffer") %>%
#   ggplot(aes(x = time, y = values, color =key)) +
#   #facet_grid(key ~., scales = "free_y" ) +
#   geom_line()
if (fd) return(fd_tb)
else return(index)
}
dat <- readxl::read_xlsx("~/Google Trends/Service_Import.xlsx")
names(dat) <- c("time","value")
keywords = c("Koffer",
"Reisepass",
"dienstreise",
"stau",
"flug",
"Hotel")
res <- g_index(keywords = keywords, dat = dat)
f<-function(k){
ts_gtrends(keyword = "ikea",
time = str_c("2006-01-01 ", "2009-01-01"))
}
keywords = c("ikea", "saturn")
tl <- lapply(keywords, f)
g_index <- function(
keyword = NA,
category = 0,
geo = "DE",
time = str_c("2006-01-01 ", Sys.Date())){
start <- str_sub(time, 1,10)
end <- str_sub(time, 12,21)
dates <- seq.Date(from = as.Date(start), to = as.Date(end), by = "month")
fit <- as_tibble(openxlsx::read.xlsx("data/trend_67_0921.xlsx", detectDates = T)) %>%
select(time = date, fit) %>%
filter(time >= as.Date(start))
g_dat2 <- ts_gtrends(keyword = keyword,
category = category,
geo = "DE",
time = time) %>%
mutate(value = log(value)) %>%
mutate(value = replace(value, value == -Inf, NA_real_)) %>%
mutate(value = na.approx(value, rule = 2))
if (!("id" %in% names(g_dat2))) g_dat2 <- mutate(g_dat2, id = as.character(as.vector(sapply(category, rep, length(dates)))))
#g_dat <- ts_pick(ts_prcomp(g_dat), "PC1")
g_dat <- g_dat2 %>%
left_join(fit, by = "time") %>%
mutate(time = as.Date(time), adj = value - fit)
g_dat_adj <- g_dat %>%
select(id, time, adj) %>%
seas_adj(freq = "quart", method = "arima") %>%
rename(s_adj = value)
#print(g_dat_adj)
if (!("id" %in% names(g_dat_adj))) g_dat_adj <- mutate(g_dat_adj, id = as.character(rep(category, each = length(dates))))
g_dat <- left_join(g_dat, g_dat_adj, by = c("time", "id")) %>%
unique()
index <- g_dat %>%
select(id, time, s_adj) %>%
group_by(id) %>%
#mutate(s_adj = c(0, diff(s_adj, 1))) %>%
group_by(id) %>%
mutate(lag_1 = lag(s_adj),
#lag_2 = lag(s_adj,2),
#lag_3 = lag(s_adj,3),
#lag_4 = lag(s_adj,4)
) %>%
ungroup() %>%
rename(lag_0 = s_adj) %>%
filter(across(everything(), ~!is.na(.))) %>%
pivot_longer(cols = -c(id, time), names_to = "lag", values_to = "value") %>%
pivot_wider(names_from = c(id, lag), values_from = value)
return(index)
}
start = "2006-01-01"
end = "2021-07-01"
res_raw <- g_index(keyword = keyword, category = category, time = str_c(start, " ", end))
library(tidyverse)
library(gtrendsR)
library(trendecon)
library(tsbox)
library(zoo)
library(lubridate)
library(caret)
library(glmnet)
library(lattice)
library(RJDemetra)
res_raw <- g_index(keyword = keyword, category = category, time = str_c(start, " ", end))
keyword = c(NA)
category_aco= c(956, 276, 179)
category_ret = c(18, 78, 68, 531, 355, 121, 841)
category = category_ret
res_raw <- g_index(keyword = keyword, category = category, time = str_c(start, " ", end))
start = "2006-01-01"
end = "2021-07-01"
dat <- readxl::read_xlsx("data/Einzelhandel.xlsx", sheet = "Abbildung") %>%
select(c(1,3,12))
res_raw <- g_index(keyword = keyword, category = category, time = str_c(start, " ", end))
#'
#'For method there can be choosen \code{"firstdiff"} and \code{"arima"}.
#'If \code{"firstdiff"}, first differences with \code{lag = 1} is executed.
#'If \code{"arima"}, the X-13ARIMA-SEATS of US  procedure is used.
#'
#'@example
#'series <- ts_gtrends(c("ikea", "saturn"), time = "all")
#'seas_adj(series, freq = "month, log.traf = T, method = "firstdiff")
#'@import tidyverse gtrendsR tsbox RJDemetra zoo
#'@export
seas_adj <-function(series, freq = "month", log.trafo = F, method = "arima"){
if (log.trafo) series <- mutate(series, value = log(value)) #Log-Trafo
if(method == "arima"){                      #Saisonbereinigung mit X-13 ARIMA
if (!("id" %in% names(series))) series <- mutate(series, id = "id")
series <- ts_ts(series)
h <- function(ts){
m <- x13(ts)
return(m$final$series[,"sa"])
}
if (dim(series)[2] == 1) series <- ts_tbl(h(series))
if (dim(series)[2] > 1){
print("blub")
series <- as.list(series)
series <- lapply(series, h)
n <- names(series)
t1 <- series[[1]]
for (i in 2:length(series)) t1 <- ts_c(t1, series[[i]])
dimnames(t1)[[2]] <- n
series <- ts_tbl(t1)
}
}
if(method == "firstdiff"){     #Saisonbereinigung mit ersten Differenzen mit lag = 4
#da gerade Quartalsdaten. Fuer monatsdaten lag = 12
if (!("id" %in% names(series))) series <- mutate(series, id = "id")
if (freq == "month") k = 12
if (freq == "quarter") k = 4
series <- series %>%
group_by(id) %>%
mutate(value = c(rep(0,k), diff(value, k))) %>% #Wenn Monatsdaten hier 12 statt 4
ungroup()
}
series
}
res_raw <- g_index(keyword = keyword, category = category, time = str_c(start, " ", end))
res_raw
category_ret = c(18, 78)#, 68, 531, 355, 121, 841)
category = category_ret
res_raw <- g_index(keyword = keyword, category = category, time = str_c(start, " ", end))
res_raw
res_raw
