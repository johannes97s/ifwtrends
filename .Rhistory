if (NROW(temp) == 0) stop(str_c("Keine Daten f端r Kategorie ", cat))
temp %>%
mutate(date = as_date(date)) %>%
select(date = date, key = any_of(c("keyword", "category")), value = hits) %>%
filter(date %in% dates) -> temp
dat <- bind_rows(dat, temp)
}
}
if (roll){
}
return(pivot_wider(ts_prcomp(dat), names_from = id, values_from = value)[1:n])
}
pca(categories = c(751,651,3), end  = "2021-01-01")
############################
#Damit kann unter Angabe von
pca <- function(keywords = NA,
categories = 0,
start = as.Date("2004-01-01"),
end,
components = max(length(kewyords), length(categories))){
stopifnot("Nur keywords oder categories darf angegeben werden" = is.na(keywords) | categories == 0)
dates = seq.Date(as.Date("2004-01-01"), as.Date(end), by = "month")
dat = tibble(date = NULL, key = NULL, value = NULL)
for (kw in keywords){
for (cat in categories){
as_tibble(gtrends(
keyword = kw,
category = cat,
geo = "DE",
time = "all")$interest_over_time)  -> temp
if (NROW(temp) == 0) stop(str_c("Keine Daten f端r Kategorie ", cat))
temp %>%
mutate(date = as_date(date)) %>%
select(date = date, key = any_of(c("keyword", "category")), value = hits) %>%
filter(date %in% dates) -> temp
dat <- bind_rows(dat, temp)
}
}
return(pivot_wider(ts_prcomp(dat), names_from = id, values_from = value)[1:n])
}
pca(categories = c(751,651,3), end  = "2021-01-01")
############################
#Damit kann unter Angabe von
pca <- function(keywords = NA,
categories = 0,
start = as.Date("2004-01-01"),
end,
components = max(length(kewyords), length(categories))){
stopifnot("Nur keywords oder categories darf angegeben werden" = is.na(keywords) | categories == 0)
dates = seq.Date(as.Date("2004-01-01"), as.Date(end), by = "month")
dat = tibble(date = NULL, key = NULL, value = NULL)
for (kw in keywords){
for (cat in categories){
as_tibble(gtrends(
keyword = kw,
category = cat,
geo = "DE",
time = "all")$interest_over_time)  -> temp
if (NROW(temp) == 0) stop(str_c("Keine Daten f端r Kategorie ", cat))
temp %>%
mutate(date = as_date(date)) %>%
select(date = date, key = any_of(c("keyword", "category")), value = hits) %>%
filter(date %in% dates) -> temp
dat <- bind_rows(dat, temp)
}
}
return(pivot_wider(ts_prcomp(dat), names_from = id, values_from = value)[1:components])
}
pca(categories = c(751,651,3), end  = "2021-01-01")
############################
#Damit kann unter Angabe von
pca <- function(keywords = NA,
categories = 0,
start = as.Date("2004-01-01"),
end,
components = max(length(keywords), length(categories))){
stopifnot("Nur keywords oder categories darf angegeben werden" = is.na(keywords) | categories == 0)
dates = seq.Date(as.Date("2004-01-01"), as.Date(end), by = "month")
dat = tibble(date = NULL, key = NULL, value = NULL)
for (kw in keywords){
for (cat in categories){
as_tibble(gtrends(
keyword = kw,
category = cat,
geo = "DE",
time = "all")$interest_over_time)  -> temp
if (NROW(temp) == 0) stop(str_c("Keine Daten f端r Kategorie ", cat))
temp %>%
mutate(date = as_date(date)) %>%
select(date = date, key = any_of(c("keyword", "category")), value = hits) %>%
filter(date %in% dates) -> temp
dat <- bind_rows(dat, temp)
}
}
return(pivot_wider(ts_prcomp(dat), names_from = id, values_from = value)[1:components])
}
pca(categories = c(751,651,3), end  = "2021-01-01")
select(pca(categories = c(751,651,3), end  = "2021-01-01"), -time)
t
t = tibble(a = c(4,5,6), b = "")
t = tibble(a = c(4,5,6), b = "d")
t
t %>% names() <- c("h". "i")
t %>% names() <- c("h", "i")
t %>% names(.) <- c("h", "i")
t %>% (names(.) <- c("h", "i"))
t %>% (names() <- c("h", "i"))
use_r("other_frequencies.R")
library(tidyverse)
library(gtrendsR)
library(trendecon)
library(tsbox)
library(openxlsx)
library(corrr)
library(lubridate)
proc_keyword_init("headset", "CH")
proc_keyword_init("arbeitslos", "DE")
proc_keyword_init("arbeitslos", "DE")
library(tidyverse)
library(gtrendsR)
library(trendecon)
library(tsbox)
library(openxlsx)
library(corrr)
library(lubridate)
?proc_keyword
proc_keyword_init("arbeitslos", "DE")
proc_index("arbeitslos", "DE", "arbeitslos")
?proc_index
proc_keyword_init("arbeitslos", "DE")
proc_index("arbeitslos", "DE", "arbeitslos")
proc_keyword_init("arbeitslos", "DE")
proc_index("arbeitslos", "DE", "arbeitslos")
library(tidyverse)
library(gtrendsR)
library(trendecon)
library(tsbox)
library(openxlsx)
library(corrr)
library(lubridate)
proc_index("arbeitslos", "DE", "arbeitslos")
proc_keyword_init("arbeitslos", "DE")
proc_index("arbeitslos", "DE", "arbeitslos_ind")
getwd()
proc_keyword_init("arbeitslos", "DE")
library(tidyverse)
library(gtrendsR)
library(trendecon)
library(tsbox)
library(openxlsx)
library(corrr)
library(lubridate)
proc_keyword_init("arbeitslos", "DE")
proc_index("arbeitslos", "DE", "arbeitslos_ind")
proc_index("arbeitslos", "DE", "arbeitslos_ind")
library(tidyverse)
library(gtrendsR)
library(trendecon)
library(tsbox)
library(openxlsx)
library(corrr)
library(lubridate)
proc_index("arbeitslos", "DE", "arbeitslos_ind")
?proc_index
proc_index()
proc_index
proc_keyword
write_keyword
getwd(
)
proc_index("arbeitslos", "DE", "arbeitslos_ind")
proc_keyword_init("arbeitslos", "DE")
proc_index("arbeitslos", "DE", "arbeitslos_ind")
proc_keyword_latest("arbeitslos", "DE")
library(trendecon)
proc_keyword_latest("arbeitslos", "DE")
trendecon:::proc_keyword_latest("arbeitslos", "DE")
trendecon:::proc_keyword_latest("arbeitslos", "DE")
proc_index("arbeitslos", "DE", "arbeitslos_ind")
library(tidyverse)
library(gtrendsR)
library(trendecon)
proc_index("arbeitslos", "DE", "arbeitslos_ind")
proc_keyword_init("Hartz 4", "DE")
use_r("Factorloadings.R")
devtools::use_r("Factorloadings.R")
usethis::use_r("Factorloadings.R")
uschange
??uschange
install.packages("forcast")
library(forecast)
install.packages("forecast")
dates <- seq.Date(from = as.Date( "2004-01-01"), to = as.Date("2021-08-01"), by = "month")
####################Tibble mit Kategorien aus dem Paper erstellen
cat_paper <- as_tibble(read.csv("Kategorien_Woloszko.csv", head = F))
names(cat_paper) = "name"
cat<- as_tibble(categories)
cat_paper %>%
left_join(cat, by = "name") %>%
unique() -> cat_paper
##################Tibble mit Zeitreihen erstellen
series <- tibble(date = dates)
missing = NULL
for (i in cat_paper$id){
g <- gtrends(geo = "DE", time = "all", category = i)$interest_over_time
if (is.null(g)) missing <- c(missing, cat_paper$name[cat_paper$id == i])
else series <- bind_cols(series, i = g$hits)
}
names(series) <- c("date", setdiff(cat_paper$name, missing))
library(tidyverse)
library(gtrendsR)
library(trendecon)
library(tsbox)
library(openxlsx)
library(forcast)
library(forecast)
read.xlsx("~/ifwtrends/Kategorien_und_PC.xlsx")
series
ts_ts(series)
series
tslm(PC1 ~ `Events & Listings`, data = series)
read.xlsx("~/ifwtrends/Kategorien_und_PC.xlsx")
series
names(series)
View(series)
series <- read.xlsx("~/ifwtrends/Kategorien_und_PC.xlsx")
tslm(PC1 ~ `Events & Listings`, data = series)
tslm(PC1 ~ "Events & Listings", data = series)
series
tslm(PC1 ~ series$`Events.&.Listings`, data = series)
lm(PC1 ~ series$`Events.&.Listings`, data = series)
plot(series$PC1, series$`Events.&.Listings`)
lm(series$PC1 ~ series$`Events.&.Listings`)
plot(PC1, PC1)
lm(PC1 ~ `Events.&.Listings`, data = series)
library(forecast)
series <- read.xlsx("~/ifwtrends/Kategorien_und_PC.xlsx")
lm(PC1 ~ `Events.&.Listings`, data = series)
lm(PC1 ~ PC2, data = series)
lm(PC1 ~ PC1, data = series)
lm(PC1 ~ PC2, data = series)
plot(series$PC1, series$PC2)
plot(series$PC1)
corr(series$PC1, series$PC2)
correlate(series$PC1, series$PC2)
cor(series$PC1, series$PC2)
series
as_tibble(series)
series <- as_tibble(read.xlsx("~/ifwtrends/Kategorien_und_PC.xlsx"))
series
series <- as.tibble(read.xlsx("~/ifwtrends/Kategorien_und_PC.xlsx"))
series <- as_tibble(read.xlsx("~/ifwtrends/Kategorien_und_PC.xlsx"))
series
series <- as_tibble(read.xlsx("~/ifwtrends/Kategorien_und_PC.xlsx")) %>%
mutate(date = as.Date(date, origin = "1970-01-01"))
series
series <- as_tibble(read.xlsx("~/ifwtrends/Kategorien_und_PC.xlsx")) %>%
mutate(date = as.Date(date, origin = "1970-01-01"))
series
series <- as_tibble(read.xlsx("~/ifwtrends/Kategorien_und_PC.xlsx"))
series
?read.xlsx
series <- as_tibble(read.xlsx("~/ifwtrends/Kategorien_und_PC.xlsx", detectDates = T))
series
proc_index("arbeitslos", "DE", "arbeitslos_ind")
?mapply
str_c("PC",1:5)
lm("PC1" ~ "PC2", data = series)
lm(series[2:6] ~ `Events $ Listing`, data = series)
names(series)
lm(series[2:6] ~ `Events $ Listings`, data = series)
lm(series[2:6] ~ `Events & Listings`, data = series)
lm(series[2:6] ~ `Events.&.Listings`, data = series)
lm(series[2] ~ `Events.&.Listings`, data = series)
series[2]
as.vector(series[2])
series$PC1
series[[2]]
lm(series[[2]] ~ `Events.&.Listings`, data = series)
series[[2:3]]
series[[2]:[3]]
series[c([2],[3])]
series[2:6]
series[2:6][1:5]
series[2:6][[1:5]]
g <- function(i){
lm(series[[i+1]], serie, data = series )
}
f <- function(serie){
fac <- 2:6
mapply(g, fac)
}
ts_gtrends_mwd("arbeitslos", "DE")
s <- ts_gtrends_mwd("arbeitslos", "DE")
?ts_gtrends_mwd
s
s <- ts_gtrends_mwd("amazon", "DE")
ts_gtrends_mwd
ts_gtrends_mwd()
install.packages("tempdisagg")
library(tempdisagg)
install.packages("tempdisagg")
install.packages("tempdisagg")
?trendecon::ts_gtrends_mwd
trendecon::ts_gtrends_mwd
h <- function (keyword = "Insolvenz", geo = "CH")
{
if (length(keyword) > 1)
stop("Only a single keyword is allowed.")
from <- "2006-01-01"
d <- ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "15 days", windowsize = "6 months",
n_windows = 348, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
d2 <- ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-90 days")[2], stepsize = "1 day",
windowsize = "3 months", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
dd <- aggregate_averages(aggregate_windows(d), aggregate_windows(d2))
w <- ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "11 weeks", windowsize = "5 years",
n_windows = 68, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
w2 <- ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-1 year")[2], stepsize = "1 week",
windowsize = "1 year", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
ww <- aggregate_averages(aggregate_windows(w), aggregate_windows(w2))
m <- ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "15 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
m2 <- ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "20 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
mm <- aggregate_averages(aggregate_windows(m), aggregate_windows(m2))
dd <- select(dd, -n)
ww <- select(ww, -n)
mm <- select(mm, -n)
wd <- tempdisagg::td(ww ~ dd, method = "fast", conversion = "mean")
wd <- predict(wd)
mwd <- tempdisagg::td(mm ~ wd, method = "fast", conversion = "mean")
mwd <- predict(mwd)
mwd
}
h <- function (keyword = "Insolvenz", geo = "CH")
{
if (length(keyword) > 1)
stop("Only a single keyword is allowed.")
from <- "2006-01-01"
d <- ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "15 days", windowsize = "6 months",
n_windows = 348, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
d2 <- ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-90 days")[2], stepsize = "1 day",
windowsize = "3 months", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
dd <- aggregate_averages(aggregate_windows(d), aggregate_windows(d2))
w <- ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "11 weeks", windowsize = "5 years",
n_windows = 68, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
w2 <- ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-1 year")[2], stepsize = "1 week",
windowsize = "1 year", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
ww <- aggregate_averages(aggregate_windows(w), aggregate_windows(w2))
m <- ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "15 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
m2 <- ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "20 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
mm <- aggregate_averages(aggregate_windows(m), aggregate_windows(m2))
dd <- select(dd, -n)
ww <- select(ww, -n)
mm <- select(mm, -n)
print(dd)
wd <- tempdisagg::td(ww ~ dd, method = "fast", conversion = "mean")
wd <- predict(wd)
mwd <- tempdisagg::td(mm ~ wd, method = "fast", conversion = "mean")
mwd <- predict(mwd)
mwd
}
h <- function (keyword = "Insolvenz", geo = "CH")
{
if (length(keyword) > 1)
stop("Only a single keyword is allowed.")
from <- "2016-01-01"
d <- ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "15 days", windowsize = "6 months",
n_windows = 348, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
d2 <- ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-90 days")[2], stepsize = "1 day",
windowsize = "3 months", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
dd <- aggregate_averages(aggregate_windows(d), aggregate_windows(d2))
w <- ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "11 weeks", windowsize = "5 years",
n_windows = 68, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
w2 <- ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-1 year")[2], stepsize = "1 week",
windowsize = "1 year", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
ww <- aggregate_averages(aggregate_windows(w), aggregate_windows(w2))
m <- ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "15 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
m2 <- ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "20 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
mm <- aggregate_averages(aggregate_windows(m), aggregate_windows(m2))
dd <- select(dd, -n)
ww <- select(ww, -n)
mm <- select(mm, -n)
print(dd)
wd <- tempdisagg::td(ww ~ dd, method = "fast", conversion = "mean")
wd <- predict(wd)
mwd <- tempdisagg::td(mm ~ wd, method = "fast", conversion = "mean")
mwd <- predict(mwd)
mwd
}
h("arbeitslos", "DE")
library(tidyverse)
library(gtrendsR)
library(trendecon)
library(tsbox)
library(openxlsx)
library(corrr)
library(lubridate)
h <- function (keyword = "Insolvenz", geo = "CH")
{
if (length(keyword) > 1)
stop("Only a single keyword is allowed.")
from <- "2016-01-01"
d <- ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "15 days", windowsize = "6 months",
n_windows = 348, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
d2 <- ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-90 days")[2], stepsize = "1 day",
windowsize = "3 months", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
dd <- aggregate_averages(aggregate_windows(d), aggregate_windows(d2))
w <- ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "11 weeks", windowsize = "5 years",
n_windows = 68, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
w2 <- ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-1 year")[2], stepsize = "1 week",
windowsize = "1 year", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
ww <- aggregate_averages(aggregate_windows(w), aggregate_windows(w2))
m <- ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "15 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
m2 <- ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "20 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
mm <- aggregate_averages(aggregate_windows(m), aggregate_windows(m2))
dd <- select(dd, -n)
ww <- select(ww, -n)
mm <- select(mm, -n)
print(dd)
wd <- tempdisagg::td(ww ~ dd, method = "fast", conversion = "mean")
wd <- predict(wd)
mwd <- tempdisagg::td(mm ~ wd, method = "fast", conversion = "mean")
mwd <- predict(mwd)
mwd
}
h("arbeitslos", "DE")
ts_gtrends_windows
library(trendecon)
library(tsbox)
library(gtrendsR)
ts_gtrends_windows
trendecon::ts_gtrends_windows
trendecon:::ts_gtrends_windows
h <- function (keyword = "Insolvenz", geo = "CH")
{
if (length(keyword) > 1)
stop("Only a single keyword is allowed.")
from <- "2016-01-01"
d <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "15 days", windowsize = "6 months",
n_windows = 348, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
d2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-90 days")[2], stepsize = "1 day",
windowsize = "3 months", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
dd <- aggregate_averages(aggregate_windows(d), aggregate_windows(d2))
w <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "11 weeks", windowsize = "5 years",
n_windows = 68, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
w2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-1 year")[2], stepsize = "1 week",
windowsize = "1 year", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
ww <- aggregate_averages(aggregate_windows(w), aggregate_windows(w2))
m <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "15 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
m2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "20 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
mm <- aggregate_averages(aggregate_windows(m), aggregate_windows(m2))
dd <- select(dd, -n)
ww <- select(ww, -n)
mm <- select(mm, -n)
print(dd)
wd <- tempdisagg::td(ww ~ dd, method = "fast", conversion = "mean")
wd <- predict(wd)
mwd <- tempdisagg::td(mm ~ wd, method = "fast", conversion = "mean")
mwd <- predict(mwd)
mwd
}
h("arbeitslos", "DE")
proc_index("arbeitslos", "DE", "arbeitslos_ind")
