f <- function(serie, i){
lm(dat[[i+1]], serie)
}
factorR2(series[2:6], series[7:length(series)])
factorR2 <- function(series, factors){
dat <- bind_cols(series, factors)
R2 <- tibble(factor = names(factors))
mapply(f, series)
}
f <- function(serie, i){
lm(dat[[i+1]], serie)
}
factorR2 <- function(series, factors){
dat <- bind_cols(series, factors)
R2 <- tibble(factor = names(factors))
mapply(f, series)
}
factorR2(series[2:6], series[7:length(series)])
f <- function(serie, i){
lm(dat[[i+1]], serie)
}
factorR2 <- function(series, factors){
dat <- bind_cols(series, factors)
R2 <- tibble(factor = names(factors))
mapply(f, series)
}
factorR2(series[2:6], series[7:length(series)])
factorR2(series[7:length(series)], series[2:6])
f <- function(serie, i){
lm(dat[[i+1]], serie)
}
factorR2 <- function(series, factors){
dat <- bind_cols(series, factors)
R2 <- tibble(factor = names(factors))
mapply(f, series, 1:5)
}
factorR2(series[7:length(series)], series[2:6])
f <- function(serie, i, dat){
lm(dat[[i+1]], serie)
}
factorR2 <- function(series, factors){
dat <- bind_cols(series, factors)
R2 <- tibble(factor = names(factors))
mapply(f, series, 1:5, dat)
}
factorR2(series[7:length(series)], series[2:6])
as.list(series)
f <- function(serie, i, dat){
lm(dat[[i+1]], serie)
}
factorR2 <- function(series, factors){
dat <- bind_cols(series, factors)
R2 <- tibble(factor = names(factors))
mapply(f, as.list(series), 1:5, dat)
}
factorR2(series[7:length(series)], series[2:6])
f <- function(serie, i, dat){
lm(dat[[i+1]] ~ serie)
}
factorR2 <- function(series, factors){
dat <- bind_cols(series, factors)
R2 <- tibble(factor = names(factors))
mapply(f, as.list(series), 1:5, dat)
}
factorR2(series[7:length(series)], series[2:6])
f <- function(serie, i, dat){
lm(dat[[i+1]] ~ serie[[1]])
}
factorR2 <- function(series, factors){
dat <- bind_cols(series, factors)
R2 <- tibble(factor = names(factors))
mapply(f, as.list(series), 1:5, dat)
}
factorR2(series[7:length(series)], series[2:6])
factorR2(series[7:length(series)], series[2:6])
lm(1 ~ 3)
lm(c(1,2,3) ~ c(4,5,6))
lm(c(1,2,3) ~ c(4,5,6))$coefficients
lm(c(1,2,3) ~ c(4,5,6))$coefficients[2]
lm(c(1,2,3) ~ c(4,5,6))$coefficients[[2]]
f <- lm(c(1,2,3) ~ c(4,5,6))
f$residuals
str(f)
f$model
f$terms
f$qr
summary(f)
summary(f)$r.squared
f <- function(serie, i, dat){
summary(lm(dat[[i+1]] ~ serie[[1]]))$r.squared
}
factorR2 <- function(series, factors){
dat <- bind_cols(series, factors)
R2 <- tibble(factor = names(factors))
mapply(f, as.list(series), 1:5, dat)
}
factorR2(series[7:length(series)], series[2:6])
str(factorR2(series[7:length(series)], series[2:6]))
as.matrix(rep(rnorm(10), 4))
as.matrix(rep(rnorm(10), 4), 10)
matrix(rep(rnorm(10), 4), 10)
matrix(rrnorm(40), 10)
matrix(rnorm(40), 10)
series <- matrix(rnorm(40), 10)
f <- function(n, serie){
mapply(g, serie)
}
g <- function(i, serie){
serie+i
}
mapply(f, series)
mapply(f, 4, series)
series <- matrix(rnorm(40), 10)
f <- function(n, series){
mapply(g, 1:n, series)
}
g <- function(i, serie){
serie+i
}
mapply(f, 4, series)
f <- function(n, series){
mapply(g, 1:n, series)
}
g <- function(i, serie){
mean(serie)+i
}
series <- matrix(rnorm(40), 10)
f <- function(n, series){
mapply(g, 1:n, series)
}
g <- function(i, serie){
mean(serie)+i
}
mapply(f, 4, series)
g <- function(i, serie){
mean(serie)+i
}
f <- function(n, series){
mapply(g, 1:n, series)
}
mapply(f, 4, series)
series
mean(series[,1])
mean(series[,1])+1
f <- function(n, series){
mapply(g, 1:n, as.list(series))
}
g <- function(i, serie){
mean(serie)+i
}
mapply(f, 4, series)
g <- function(i, serie){
mean(serie)+i
}
mapply(g, 1:4, series)
series
series <- as_tibble(read.xlsx("~/ifwtrends/Kategorien_und_PC.xlsx", detectDates = T))
series[1]
series
f <- function(i, serie) lm(series[[i]], serie)
f <- function(i, serie) lm(series[[i+1]], serie)
serie <- series[7]
mapply(f, 1:5, serie )
serie <- series[[7]]
f <- function(i, serie) lm(series[[i+1]], serie)
mapply(f, 1:5, serie )
f <- function(i, serie) lm(series[[i+1]] ~ serie)
mapply(f, 1:5, serie )
serie
series[[2]]
serie <- series[[7]]
f <- function(i, serie, series) lm(series[[i+1]] ~ serie)
mapply(f, 1:5, serie, series )
f <- function(i, serie, series) summary(lm(series[[i+1]] ~ serie))$r.squared
mapply(f, 1:5, serie, series )
serie <- series[[7]]
f <- function(i, serie, series) summary(lm(series[[i+1]] ~ serie))$r.squared
mapply(f, 1:5, serie, series )
f <- function(i, serie, series) lm(series[[i+1]] ~ serie)$coefficients[[2]]
mapply(f, 1:5, serie, series )
serie
series[[2]]
lm(series[[2]] ~ serie)
daily <- read.csv("C:\\Users\\Schnebel\\Documents\\ifwtrends\\raw\\de\\arbeitslos_d.csv)
daily <- read.csv("C:\\Users\\Schnebel\\Documents\\ifwtrends\\raw\\de\\arbeitslos_d.csv")
read.csv("C:\\Users\\Schnebel\\Documents\\ifwtrends\\raw\\de\\arbeitslos_d.csv")
daily <- read.csv("C:\\Users\\Schnebel\\Documents\\ifwtrends\\raw\\de\\arbeitslos_d.csv")
daily
daily <- as_tibble(read.csv("C:\\Users\\Schnebel\\Documents\\ifwtrends\\raw\\de\\arbeitslos_d.csv"))
daily
daily %>%
mutate(time = lubridate::floor_date(time, "month")) %>%
group_by(time) %>%
mutate(mean = mean(value))
daily %>%
mutate(time = lubridate::floor_date(as.Date(time), "month")) %>%
group_by(time) %>%
mutate(mean = mean(value))
daily %>%
mutate(time = lubridate::floor_date(as.Date(time), "month")) %>%
group_by(time) %>%
mutate(mean = mean(value))
?mapply
mapply(function(x, y) seq_len(x) + y,
c(a =  1, b = 2, c = 3),  # names from first
c(A = 10, B = 0, C = -10))
f <- function(serie,i, series) lm(series[[i+1]] ~ serie)$coefficients[[2]]
mapply(f,serie, 1:5, series )
f <- function(series, serie,i) lm(series[[i+1]] ~ serie)$coefficients[[2]]
mapply(f, series, serie, 1:5)
lm(series[[i+1]] ~ serie)$coefficients[[2]]
lm(series[[2+1]] ~ serie)$coefficients[[2]]
mapply(f, series[8:length(series)], serie, 1:5)
?apply
f <- function(serie) lm(series$PC1 ~ serie)
apply(series[8:12], 2, f)
f <- function(serie) lm(series$PC1 ~ serie)$coefficients[2]
apply(series[8:12], 2, f)
names(tibble()) <- letters[1:5]
colnames(tibble()) <- letters[1:5]
colnames(tibble())
tibble()
apply(series[7:length(series)], 2, f)
tibble(comp = NULL)
tibble(factor = numeric(0))
factorR2 <- function(series, factors){
R2 <- tibble(factor = str_c("PC",1:length(factors)))
for (i in seq_along(factors)){
f <- function(serie) lm(factors[[i]] ~ serie)$coefficients[2]
R2 <- bind_rows(apply(series[7:length(series)], 2, f))
}
R2
}
factorsR2(series[7:12], series[2:6])
factorR2(series[7:12], series[2:6])
series
series[7:12]
factorR2 <- function(series, factors){
R2 <- tibble(factor = str_c("PC",1:length(factors)))
for (i in seq_along(factors)){
f <- function(serie) lm(factors[[i]] ~ serie)$coefficients[2]
R2 <- bind_rows(apply(series, 2, f))
}
R2
}
factorR2(series[7:12], series[2:6])
factorR2 <- function(series, factors){
R2 <- tibble(factor = str_c("PC",1:length(factors)))
for (i in seq_along(factors)){
f <- function(serie) summary(lm(factors[[i]] ~ serie))$r.squared[2]
R2 <- bind_rows(apply(series, 2, f))
}
R2
}
factorR2(series[7:12], series[2:6])
dat <- as_tibble(read.xlsx("~/ifwtrends/Kategorien_und_PC.xlsx", detectDates = T))
dat <- as_tibble(read.xlsx("~/ifwtrends/Kategorien_und_PC.xlsx", detectDates = T))
factorR2 <- function(series, factors){
R2 <- tibble(factor = str_c("PC",1:length(factors)))
for (i in seq_along(factors)){
f <- function(serie) summary(lm(factors[[i]] ~ serie))$r.squared[2]
R2 <- bind_rows(apply(series, 2, f))
}
R2
}
factors <- dat[2:6]
series <- dat[7:12]
factorR2(series, factors)
seq_along(factors)
factors[[1]]
factors[[5]]
factors[[6]]
factorR2 <- function(series, factors){
R2 <- tibble(factor = str_c("PC",1:length(factors)))
for (i in seq_along(factors)){
f <- function(serie) summary(lm(factors[[i]] ~ serie))$r.squared[2]
R2 <- bind_rows(R2, apply(series, 2, f))
}
R2
}
factors <- dat[2:6]
series <- dat[7:12]
factorR2(series, factors)
factorR2 <- function(series, factors){
R2 <- tibble(factor = str_c("PC",1:length(factors)))
for (i in seq_along(factors)){
f <- function(serie) lm(factors[[i]] ~ serie)$coefficients[2]
R2 <- bind_rows(R2, apply(series, 2, f))
}
R2
}
factors <- dat[2:6]
series <- dat[7:12]
factorR2(series, factors)
dat <- as_tibble(read.xlsx("~/ifwtrends/Kategorien_und_PC.xlsx", detectDates = T))
dat <- as_tibble(read.xlsx("~/ifwtrends/Kategorien_und_PC.xlsx", detectDates = T))
lm(series[[2]] ~ dat[[7]], data = dat)$coefficients[2]
dat <- as_tibble(read.xlsx("~/ifwtrends/Kategorien_und_PC.xlsx", detectDates = T))
lm(dat[[2]] ~ dat[[7]], data = dat)$coefficients[2]
dat <- as_tibble(read.xlsx("~/ifwtrends/Kategorien_und_PC.xlsx", detectDates = T))
lm(dat[[3]] ~ dat[[7]], data = dat)$coefficients[2]
factorR2 <- function(series, factors){
R2 <- tibble()
for (i in seq_along(factors)){
f <- function(serie) lm(factors[[i]] ~ serie)$coefficients[2]
R2 <- bind_rows(R2, apply(series, 2, f))
}
R2
}
factors <- dat[2:6]
series <- dat[7:12]
factorR2(series, factors)
factorR2 <- function(series, factors){
R2 <- tibble()
for (i in seq_along(factors)){
f <- function(serie) lm(factors[[i]] ~ serie)$coefficients[2]
R2 <- bind_rows(R2, apply(series, 2, f))
}
bind_cols(tibble(factors = str_c("PC",1:length(factors))), R2)
}
factors <- dat[2:6]
series <- dat[7:12]
factorR2(series, factors)
summary(lm(dat[[3]] ~ dat[[7]], data = dat))
s = summary(lm(dat[[3]] ~ dat[[7]], data = dat))
s$r.squared
factorR2 <- function(series, factors){
R2 <- tibble()
for (i in seq_along(factors)){
f <- function(serie) {
s <- summary(lm(factors[[i]] ~ serie))
s$r.squared
}
R2 <- bind_rows(R2, apply(series, 2, f))
}
bind_cols(tibble(factors = str_c("PC",1:length(factors))), R2)
}
factors <- dat[2:6]
series <- dat[7:12]
factorR2(series, factors)
factors <- dat[2:6]
series <- dat[7:length(dat)]
factorR2(series, factors)
factorR2(series, factors)
dates <- seq.Date(from = as.Date( "2004-01-01"), to = as.Date("2021-08-01"), by = "month")
####################Tibble mit Kategorien aus dem Paper erstellen
cat_paper <- as_tibble(read.csv("Kategorien_Woloszko.csv", head = F))
names(cat_paper) = "name"
cat<- as_tibble(categories)
cat_paper %>%
left_join(cat, by = "name") %>%
unique() -> cat_paper
##################Tibble mit Zeitreihen erstellen
series <- tibble(date = dates)
gtrends(geo = "DE", time = "all", category = "651")
gtrends(geo = "DE", time = "all", category = "651")$related_topics
nrows(gtrends(geo = "DE", time = "all", category = "651")$related_topics)
nrow(gtrends(geo = "DE", time = "all", category = "651")$related_topics)
write.xlsx(factorR2(series, factors), "Faktoren_R2.xlsx")
dat <- as_tibble(read.xlsx("~/ifwtrends/Kategorien_und_PC.xlsx", detectDates = T))
factors <- dat[2:6]
series <- dat[7:length(dat)]
write.xlsx(factorR2(series, factors), "Faktoren_R2.xlsx")
write.xlsx(factorR2(series, factors), "Faktoren_R2.xlsx")
usethis::use_r("disaggregation.R")
daily <- read.csv("raw/de/arbeitslos_d.csv")
daily
dat_d <- as_tibble(read.csv("raw/de/arbeitslos_d.csv")) %>%
mutate(time = as.Date(time))
dat_m <- as_tibble(read.csv("raw/de/arbeitslos_d.csv")) %>%
mutate(time = as.Date(time))
dat_d
dat_aggr_m <- daily %>%
mutate(time = floor_date(time), "month") %>%
group_by(time) %>%
mutate(mean = mean(time))
library(lubridate)
dat_aggr_m <- daily %>%
mutate(time = floor_date(time), "month") %>%
group_by(time) %>%
mutate(mean = mean(time))
dat_aggr_m <- daily %>%
mutate(time = floor_date(time, "month")) %>%
group_by(time) %>%
mutate(mean = mean(time))
daily %>%
mutate(time = floor_date(time, "month"))
daily
dat_aggr_m <- dat_d %>%
mutate(time = floor_date(time, "month")) %>%
group_by(time) %>%
mutate(mean = mean(time))
dat_aggr_m
plot(dat_m$value, type ="l")
dat_d <- as_tibble(read.csv("raw/de/arbeitslos_d.csv")) %>%
mutate(time = as.Date(time))
dat_m <- as_tibble(read.csv("raw/de/arbeitslos_m.csv")) %>%
mutate(time = as.Date(time))
dat_aggr_m <- dat_d %>%
mutate(time = floor_date(time, "month")) %>%
group_by(time) %>%
mutate(mean = mean(time))
plot(dat_m$value, type ="l")
lines(dat_aggr_m$value, col = "red")
plot(dat_aggr_m$value, type ="l")
dat_d <- as_tibble(read.csv("raw/de/arbeitslos_d.csv")) %>%
mutate(time = as.Date(time))
dat_m <- as_tibble(read.csv("raw/de/arbeitslos_m.csv")) %>%
mutate(time = as.Date(time))
dat_aggr_m <- dat_d %>%
mutate(time = floor_date(time, "month")) %>%
group_by(time) %>%
mutate(mean = mean(time))
plot(dat_aggr_m$value, type ="l")
dat_d <- as_tibble(read.csv("raw/de/arbeitslos_d.csv")) %>%
mutate(time = as.Date(time))
dat_m <- as_tibble(read.csv("raw/de/arbeitslos_m.csv")) %>%
mutate(time = as.Date(time))
dat_aggr_m <- dat_d %>%
mutate(time = floor_date(time, "month")) %>%
group_by(time) %>%
mutate(value = mean(time))
dat_d <- as_tibble(read.csv("raw/de/arbeitslos_d.csv")) %>%
mutate(time = as.Date(time))
dat_m <- as_tibble(read.csv("raw/de/arbeitslos_m.csv")) %>%
mutate(time = as.Date(time))
dat_aggr_m <- dat_d %>%
mutate(time = floor_date(time, "month")) %>%
group_by(time) %>%
mutate(value = mean(time))
plot(dat_aggr_m$value, type ="l")
dat_d <- as_tibble(read.csv("raw/de/arbeitslos_d.csv")) %>%
mutate(time = as.Date(time))
dat_m <- as_tibble(read.csv("raw/de/arbeitslos_m.csv")) %>%
mutate(time = as.Date(time))
dat_aggr_m <- dat_d %>%
mutate(time = floor_date(time, "month")) %>%
group_by(time) %>%
mutate(value = mean(value))
plot(dat_aggr_m$value, type ="l")
lines(dat_m$value, col = "red")
dat_aggr_m
dat_d <- as_tibble(read.csv("raw/de/arbeitslos_d.csv")) %>%
mutate(time = as.Date(time))
dat_m <- as_tibble(read.csv("raw/de/arbeitslos_m.csv")) %>%
mutate(time = as.Date(time))
dat_aggr_m <- dat_d %>%
mutate(time = floor_date(time, "month")) %>%
group_by(time) %>%
mutate(value = mean(value)) %>%
unique()
plot(dat_aggr_m$value, type ="l")
lines(dat_m$value, col = "red")
dat_m
dat_aggr_m
dat_aggr_m <- dat_d %>%
select(time, value) %>%
mutate(time = floor_date(time, "month")) %>%
group_by(time) %>%
mutate(value = mean(value)) %>%
unique()
plot(dat_aggr_m$value, type ="l")
lines(dat_m$value, col = "red")
dat_aggr_m$value
dat_m
dat_aggr_m
dat_aggr_m$time
dat_d <- as_tibble(read.csv("raw/de/arbeitslos_d.csv")) %>%
mutate(time = as.Date(time))
dat_m <- as_tibble(read.csv("raw/de/arbeitslos_m.csv")) %>%
mutate(time = as.Date(time)) %>%
filter(time <= as.Date("2020-10-01"))
dat_aggr_m <- dat_d %>%
mutate(time = floor_date(time, "month")) %>%
group_by(time) %>%
mutate(aggr_value = mean(value)) %>%
select(time, aggr_value) %>%
unique()
dat_m
dat_aggr_m
left_join(dat_m, dat_aggr_m)
dat_d <- as_tibble(read.csv("raw/de/arbeitslos_d.csv")) %>%
mutate(time = as.Date(time))
dat_m <- as_tibble(read.csv("raw/de/arbeitslos_m.csv")) %>%
mutate(value_m = value, time = as.Date(time)) %>%
select(time, value_m)
filter(time <= as.Date("2020-10-01"))
dat_d <- as_tibble(read.csv("raw/de/arbeitslos_d.csv")) %>%
mutate(time = as.Date(time))
dat_m <- as_tibble(read.csv("raw/de/arbeitslos_m.csv")) %>%
mutate(value_m = value, time = as.Date(time)) %>%
select(time, value_m)
dat_d <- as_tibble(read.csv("raw/de/arbeitslos_d.csv")) %>%
mutate(time = as.Date(time))
dat_m <- as_tibble(read.csv("raw/de/arbeitslos_m.csv")) %>%
mutate(value_m = value, time = as.Date(time)) %>%
select(time, value_m) %>%
filter(time <= as.Date("2020-10-01"))
dat_aggr_m <- dat_d %>%
mutate(time = floor_date(time, "month")) %>%
group_by(time) %>%
mutate(aggr_value = mean(value)) %>%
select(time, aggr_value) %>%
unique()
left_join(dat_m, dat_aggr_m)
pivot_longer(left_join(dat_m, dat_aggr_m), cols = value_m:aggr_value, names_to = type, values_to = value) %>%
ggplot(aes(x = time, y = value, col = type))
pivot_longer(left_join(dat_m, dat_aggr_m), cols = value_m:aggr_value, names_to = 'type', values_to = "value") %>%
ggplot(aes(x = time, y = value, col = type))
pivot_longer(left_join(dat_m, dat_aggr_m), cols = value_m:aggr_value, names_to = 'type', values_to = "value") %>%
ggplot(aes(x = time, y = value, col = type)) +
geom_line()
