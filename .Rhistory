mutate(value = mean(value), fit = mean(fit)) %>%
ungroup() %>%
unique() %>%
mutate(time = as.Date(time)) %>%
filter(time <= max(dat$time)) %>%
mutate(adj = value - fit)
g_dat_adj <- g_dat %>%
select(id, time, adj) %>%
seas_adj(freq = "quart", method = "arima") %>%
select(time, s_adj = value)
fit <- as_tibble(openxlsx::read.xlsx("~/ifwtrends/data/trend_67.xlsx", detectDates = T)) %>%
select(time = date, fit)
g_dat <- ts_gtrends(keyword = c("Koffer","dienstreise","stau", "reise"),
category = 0,
geo = "DE",
time = str_c("2006-01-01 ", end)) %>%
mutate(value = log(value))
g_dat <- g_dat %>%
left_join(fit, by = "time") %>%
mutate(time = as.yearqtr(time)) %>%
group_by(time) %>%
mutate(value = mean(value), fit = mean(fit)) %>%
ungroup() %>%
unique() %>%
mutate(time = as.Date(time)) %>%
filter(time <= max(dat$time)) %>%
mutate(adj = value - fit)
g_dat_adj <- g_dat %>%
select(id, time, adj) %>%
seas_adj(freq = "quart", method = "arima") %>%
select(time, s_adj = value)
g_dat <- left_join(g_dat, g_dat_adj, by = "time") %>%
left_join(dat, by = "time") #%>%
g_dat
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
ggplot(aes(x = time, y = values)) +
geom_line() +
facet_grid(key ~., scales = "free_y" ) +
ggtitle("corr = 0.973")
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
ggplot(aes(x = time, y = values, color = "id")) +
geom_line() +
facet_grid(key ~., scales = "free_y" ) +
ggtitle("corr = 0.973")
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
ggplot(aes(x = time, y = values, color = id)) +
geom_line() +
facet_grid(key ~., scales = "free_y" ) +
ggtitle("corr = 0.973")
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
ggplot(aes(x = time, y = values, color = id)) +
geom_line(
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
ggplot(aes(x = time, y = values, color = id)) +
geom_line()
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
ggplot(aes(x = time, y = values, color = id)) +
geom_line()
g_dat %>%
#select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
ggplot(aes(x = time, y = values, color = id)) +
geom_line()
g_dat %>%
#select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values")
g_dat %>%
#select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
ggplot(aes(x = time, y = values, color = id)) +
geom_line() +
facet_grid(key ~., scales = "free_y" )
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
ggplot(aes(x = time, y = values, color = key)) +
geom_line() +
facet_grid(id ~., scales = "free_y" )
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
ggplot(aes(x = time, y = values, color = id)) +
geom_line()
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
ggplot(aes(x = time, y = values, color = id)) +
geom_line() +
facet_grid(id ~., scales = "free_y" )
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values")
end = "2019-12-31"
dates <- seq.Date(from = as.Date( "2006-01-01"), to = as.Date(end), by = "month")
dat <- readxl::read_xlsx("~/Google Trends/Service_Import.xlsx") %>%
mutate(time = as.yearqtr(as.Date(Name))) %>%
select(time, value = `BD IMPORTS - SERVICES CONA`) %>%
filter(time <= as.yearqtr(as.Date(end))) %>%
mutate(time = as.Date(time)) %>%
mutate(value = log(value)) %>%
select(time, dat = value)
fit <- as_tibble(openxlsx::read.xlsx("~/ifwtrends/data/trend_67.xlsx", detectDates = T)) %>%
select(time = date, fit)
g_dat <- ts_gtrends(keyword = c("Koffer","dienstreise","stau", "reise"),
category = 0,
geo = "DE",
time = str_c("2006-01-01 ", end)) %>%
mutate(value = log(value))
g_dat <- g_dat %>%
left_join(fit, by = "time") %>%
mutate(time = as.yearqtr(time)) %>%
group_by(time) %>%
mutate(value = mean(value), fit = mean(fit)) %>%
ungroup() %>%
unique() %>%
mutate(time = as.Date(time)) %>%
filter(time <= max(dat$time)) %>%
mutate(adj = value - fit)
g_dat_adj <- g_dat %>%
select(id, time, adj) %>%
seas_adj(freq = "quart", method = "arima") %>%
select(time, s_adj = value)
g_dat <- left_join(g_dat, g_dat_adj, by = "time") %>%
left_join(dat, by = "time") #%>%
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
ggplot(aes(x = time, y = values, color = id)) +
geom_line() +
facet_grid(id ~., scales = "free_y" )
g_dat
g_dat <- ts_gtrends(keyword = c("Koffer","dienstreise","stau", "reise"),
category = 0,
geo = "DE",
time = str_c("2006-01-01 ", end)) %>%
mutate(value = log(value))
g_dat <- g_dat %>%
left_join(fit, by = "time") %>%
mutate(time = as.yearqtr(time)) %>%
group_by(time) %>%
mutate(value = mean(value), fit = mean(fit)) %>%
ungroup() %>%
unique() %>%
mutate(time = as.Date(time)) %>%
filter(time <= max(dat$time)) %>%
mutate(adj = value - fit)
g_dat_adj <- g_dat %>%
select(id, time, adj) %>%
seas_adj(freq = "quart", method = "arima") %>%
select(time, s_adj = value)
g_dat <- left_join(g_dat, g_dat_adj, by = "time") %>%
left_join(dat, by = "time") %>%
#mutate(s_adj = c(0, diff(s_adj)), dat = c(0, diff(dat)))
unique()
g_dat
g_dat %>%
select(id, time, s_adj, dat)
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values")
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
ggplot(aes(x = time, y = values, color = id))
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
ggplot(aes(x = time, y = values, color = id)) +
geom_line()
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
ggplot(aes(x = time, y = values, color = id)) +
geom_line() +
facet_grid(id ~., scales = "free_y" )
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
filter(id == "Koffer")
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
filter(id == "Koffer") %>%
ggplot(aes(x = time, y = values, color = id)) +
geom_line()
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
filter(id == "Koffer") %>%
ggplot(aes(x = time, y = values, color = id)) +
geom_line() +
facet_grid(key ~., scales = "free_y" )
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
#filter(id == "Koffer") %>%
ggplot(aes(x = time, y = values, color = id)) +
geom_line() +
facet_grid(key ~., scales = "free_y" )
g_dat
g_dat$id
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
#filter(id == "Koffer") %>%
ggplot(aes(x = time, y = values, color = id)) +
facet_grid(key ~., scales = "free_y" ) +
geom_line()
g_dat$s_adj
224/4
g_dat <- ts_gtrends(keyword = c("Koffer","dienstreise","stau", "reise"),
category = 0,
geo = "DE",
time = str_c("2006-01-01 ", end)) %>%
mutate(value = log(value))
g_dat <- g_dat %>%
left_join(fit, by = "time") %>%
mutate(time = as.yearqtr(time)) %>%
group_by(time) %>%
mutate(value = mean(value), fit = mean(fit)) %>%
ungroup() %>%
unique() %>%
mutate(time = as.Date(time)) %>%
filter(time <= max(dat$time)) %>%
mutate(adj = value - fit)
g_dat_adj <- g_dat %>%
select(id, time, adj) %>%
seas_adj(freq = "quart", method = "arima")
g_dat_adj
g_dat_adj$value
t<-g_dat %>%
select(id, time, adj)
t <- as.list(ts_ts(t))
seasonal::seas(t)
final(seasonal::seas(t))
seasonal::final(seasonal::seas(t))
plot(seasonal::final(seasonal::seas(t)))
plot(seasonal::final(seasonal::seas(t, multimode = "R")))
t
g_dat <- ts_gtrends(keyword = c("Koffer","dienstreise","stau", "reise"),
category = 0,
geo = "DE",
time = str_c("2006-01-01 ", end)) %>%
mutate(value = log(value))
g_dat <- g_dat %>%
left_join(fit, by = "time") %>%
mutate(time = as.yearqtr(time)) %>%
group_by(time) %>%
mutate(value = mean(value), fit = mean(fit)) %>%
ungroup() %>%
unique() %>%
mutate(time = as.Date(time)) %>%
filter(time <= max(dat$time)) %>%
mutate(adj = value - fit)
t<-g_dat %>%
select(id, time, adj)
t <- as.list(ts_ts(t))t
t <- as.list(ts_ts(t)
t <- as.list(ts_ts(t))
t <- as.list(ts_ts(t))
t
g_dat
arrange(g_dat, tim)
arrange(g_dat, time)
g_dat <- ts_gtrends(keyword = c("Koffer","dienstreise","stau", "reise"),
category = 0,
geo = "DE",
time = str_c("2006-01-01 ", end)) %>%
mutate(value = log(value))
g_dat <- g_dat %>%
left_join(fit, by = "time") %>%
mutate(time = as.yearqtr(time)) %>%
group_by(time, id) %>%
mutate(value = mean(value), fit = mean(fit)) %>%
ungroup() %>%
unique() %>%
mutate(time = as.Date(time)) %>%
filter(time <= max(dat$time)) %>%
mutate(adj = value - fit)
g_dat_adj <- g_dat %>%
select(id, time, adj) %>%
seas_adj(freq = "quart", method = "arima") %>%
select(time, s_adj = value)
t<-g_dat %>%
select(id, time, adj)
t <- as.list(ts_ts(t))
t
plot(seasonal::final(seasonal::seas(t, multimode = "R")))
g_dat <- left_join(g_dat, g_dat_adj, by = "time") %>%
left_join(dat, by = "time") %>%
#mutate(s_adj = c(0, diff(s_adj)), dat = c(0, diff(dat)))
unique()
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
#filter(id == "Koffer") %>%
ggplot(aes(x = time, y = values, color = id)) +
facet_grid(key ~., scales = "free_y" ) +
geom_line()
g_dat_adj <- g_dat %>%
select(id, time, adj) %>%
seas_adj(freq = "quart", method = "arima") %>%
select(time, s_adj = value)
fit <- as_tibble(openxlsx::read.xlsx("~/ifwtrends/data/trend_67.xlsx", detectDates = T)) %>%
select(time = date, fit)
g_dat <- ts_gtrends(keyword = c("Koffer","dienstreise","stau", "reise"),
category = 0,
geo = "DE",
time = str_c("2006-01-01 ", end)) %>%
mutate(value = log(value))
g_dat <- g_dat %>%
left_join(fit, by = "time") %>%
mutate(time = as.yearqtr(time)) %>%
group_by(time, id) %>%
mutate(value = mean(value), fit = mean(fit)) %>%
ungroup() %>%
unique() %>%
mutate(time = as.Date(time)) %>%
filter(time <= max(dat$time)) %>%
mutate(adj = value - fit)
g_dat_adj <- g_dat %>%
select(id, time, adj) %>%
seas_adj(freq = "quart", method = "arima") %>%
select(time, s_adj = value)
g_dat <- left_join(g_dat, g_dat_adj, by = "time") %>%
left_join(dat, by = "time") %>%
#mutate(s_adj = c(0, diff(s_adj)), dat = c(0, diff(dat)))
unique()
g_dat %>%
select(id, time, s_adj, dat) %>%
pivot_longer(cols = -c("id", "time"), names_to = "key", values_to = "values") %>%
#filter(id == "Koffer") %>%
ggplot(aes(x = time, y = values, color = id)) +
facet_grid(key ~., scales = "free_y" ) +
geom_line()
g_dat
g_dat_adj
g_dat <- ts_gtrends(keyword = c("Koffer","dienstreise","stau", "reise"),
category = 0,
geo = "DE",
time = str_c("2006-01-01 ", end)) %>%
mutate(value = log(value))
g_dat <- g_dat %>%
left_join(fit, by = "time") %>%
mutate(time = as.yearqtr(time)) %>%
group_by(time, id) %>%
mutate(value = mean(value), fit = mean(fit)) %>%
ungroup() %>%
unique() %>%
mutate(time = as.Date(time)) %>%
filter(time <= max(dat$time)) %>%
mutate(adj = value - fit)
g_dat_adj <- g_dat %>%
select(id, time, adj) %>%
seas_adj(freq = "quart", method = "arima") %>%
select(time, s_adj = value)
g_dat_adj
left_join(g_dat, g_dat_adj, by = "time")
library(tidyverse)
library(gtrendsR)
library(trendecon)
library(tsbox)
library(zoo)
install.packages("cared")
install.packages("caret")
install.packages("glmnet")
library(caret)
library(glmnet)
end = "2019-12-31"
dates <- seq.Date(from = as.Date( "2006-01-01"), to = as.Date(end), by = "month")
dat <- readxl::read_xlsx("~/Google Trends/Service_Import.xlsx") %>%
mutate(time = as.yearqtr(as.Date(Name))) %>%
select(time, value = `BD IMPORTS - SERVICES CONA`) %>%
filter(time <= as.yearqtr(as.Date(end))) %>%
mutate(time = as.Date(time)) %>%
mutate(value = log(value)) %>%
select(time, dat = value)
fit <- as_tibble(openxlsx::read.xlsx("~/ifwtrends/data/trend_67.xlsx", detectDates = T)) %>%
select(time = date, fit)
g_dat <- ts_gtrends(keyword = c("Koffer",
"dienstreise",
"stau", "reise",
"last minute",
"Reisepass", "Flug buchen",
"Italien Hotel"),
category = 0,
geo = "DE",
time = str_c("2006-01-01 ", end)) %>%
mutate(value = log(value))
g_dat <- g_dat %>%
left_join(fit, by = "time") %>%
mutate(time = as.yearqtr(time)) %>%
group_by(time, id) %>%
mutate(value = mean(value), fit = mean(fit)) %>%
ungroup() %>%
unique() %>%
mutate(time = as.Date(time)) %>%
filter(time <= max(dat$time)) %>%
mutate(adj = value - fit)
g_dat_adj <- g_dat %>%
select(id, time, adj) %>%
seas_adj(freq = "quart", method = "arima") %>%
select(time, s_adj = value)
#'
#'For method there can be choosen \code{"firstdiff"} and \code{"arima"}.
#'If \code{"firstdiff"}, first differences with \code{lag = 1} is executed.
#'If \code{"arima"}, the X-13ARIMA-SEATS of US  procedure is used.
#'
#'@example
#'series <- ts_gtrends(c("ikea", "saturn"), time = "all")
#'seas_adj(series, freq = "month, log.traf = T, method = "firstdiff")
#'@import tidyverse gtrendsR tsbox seasonal zoo
#'@export
seas_adj <-function(series, freq = "month", log.trafo = F, method = "arima"){
if (log.trafo) series <- mutate(series, value = log(value)) #Log-Trafo
if(method == "arima"){                      #Saisonbereinigung mit X-13 ARIMA
if (!("id" %in% names(series))) series <- mutate(series, id = "id")
series <- as.list(ts_ts(series))
series <- ts_tbl(seasonal::final(seasonal::seas(series)))
}
if(method == "firstdiff"){     #Saisonbereinigung mit ersten Differenzen mit lag = 4
#da gerade Quartalsdaten. Fuer monatsdaten lag = 12
if (!("id" %in% names(series))) series <- mutate(series, id = "id")
if (freq == "month") k = 12
if (freq == "quarter") k = 4
series <- series %>%
group_by(id) %>%
mutate(value = c(rep(0,k), diff(value, k))) %>% #Wenn Monatsdaten hier 12 statt 4
ungroup()
}
series
}
g_dat_adj <- g_dat %>%
select(id, time, adj) %>%
seas_adj(freq = "quart", method = "arima") %>%
select(time, s_adj = value)
series <- ts_tbl(seasonal::final(seasonal::seas(series,
transform.function = "none")))
#'
#'For method there can be choosen \code{"firstdiff"} and \code{"arima"}.
#'If \code{"firstdiff"}, first differences with \code{lag = 1} is executed.
#'If \code{"arima"}, the X-13ARIMA-SEATS of US  procedure is used.
#'
#'@example
#'series <- ts_gtrends(c("ikea", "saturn"), time = "all")
#'seas_adj(series, freq = "month, log.traf = T, method = "firstdiff")
#'@import tidyverse gtrendsR tsbox seasonal zoo
#'@export
seas_adj <-function(series, freq = "month", log.trafo = F, method = "arima"){
if (log.trafo) series <- mutate(series, value = log(value)) #Log-Trafo
if(method == "arima"){                      #Saisonbereinigung mit X-13 ARIMA
if (!("id" %in% names(series))) series <- mutate(series, id = "id")
series <- as.list(ts_ts(series))
series <- ts_tbl(seasonal::final(seasonal::seas(series,
transform.function = "none")))
}
if(method == "firstdiff"){     #Saisonbereinigung mit ersten Differenzen mit lag = 4
#da gerade Quartalsdaten. Fuer monatsdaten lag = 12
if (!("id" %in% names(series))) series <- mutate(series, id = "id")
if (freq == "month") k = 12
if (freq == "quarter") k = 4
series <- series %>%
group_by(id) %>%
mutate(value = c(rep(0,k), diff(value, k))) %>% #Wenn Monatsdaten hier 12 statt 4
ungroup()
}
series
}
g_dat_adj <- g_dat %>%
select(id, time, adj) %>%
seas_adj(freq = "quart", method = "arima") %>%
select(time, s_adj = value)
view(seasonal::seas)
view(seasonal::seas())
vignette("seas")
plot(seasonal::final(seasonal::seas(t,
transform.function = "none",
multimode = "R")))
t<-g_dat %>%
select(id, time, adj)
t <- as.list(ts_ts(t))
seasonal::final(seasonal::seas(t,
transform.function = "none",
multimode = "R"))
seasonal::final(seasonal::seas(t,
x13 = ""
transform.function = "none",
multimode = "R"))
seasonal::final(seasonal::seas(t,
x13 = "",
transform.function = "none",
multimode = "R"))
seasonal::final(seasonal::seas(t,
x12 = "",
transform.function = "none",
multimode = "R"))
seasonal::final(seasonal::seas(t,
x11 = "",
transform.function = "none",
multimode = "R"))
