% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gttrend_adj.R
\name{gttrend_adj}
\alias{gttrend_adj}
\title{Trend adjustment of a Google Trends time series}
\usage{
gttrend_adj(
  timeseries = NULL,
  keyword = NA,
  category = NA,
  geo = "DE",
  timeframe = paste("2006-01-01", Sys.Date()),
  method = "moving_avg",
  log.trafo = FALSE
)
}
\arguments{
\item{timeseries}{A already created time
series to trend adjust. Preferably already as tsibble or tibble.
If another data format is given, it will be coerced to a tsibble.}

\item{keyword}{A vector (chr) of keywords to search for.}

\item{category}{A vector (numeric) of category numbers to search for.}

\item{geo}{The region to search in.}

\item{timeframe}{A time frame to search the queries in consisting of
a start date and an end date in YYYY-MM-DD form.}

\item{method}{Character, which method for
adjustment should be choosen. See Details.}

\item{log.trafo}{Logical,
indicates if value should be transformed to log(value).}
}
\value{
Returns a tsibble with sesonal adjusted values and a
date column. Any key column will be lost. Therefore, you should only
to this with single time series with one keyword or category.
}
\description{
This function can either trend adjust a given time series
or create a new time series based on a Google Trends search query
and then directly trend adjust it.
}
\section{Methods}{

For trend_method there can be choosen between
\code{"firstdiff"}, \code{"moving_avg"} and \code{"comtrend"}.
If you choose \code{"firstdiff"},
first differences with \code{lag = 1} is executed.
If you choose the moving average,
the time series will be decomposed into its components
and the trend will be subtracted
from the whole time series (using loess).
With \code{"comtrend"},
there is a polynom of degree 5
with id-fixed effects estimated,
which captures the common trend.
The residuals where then used as the adjusted series.
For further detail, see Woloszko et al. (2020).
}

\examples{
series <- trendecon::ts_gtrends(c("ikea", "saturn"), time = "all")
gttrend_adj(series, log.trafo = TRUE, method = "moving_avg")

gttrend_adj(
  category = 179, timeframe = "2015-01-01 2021-01-01",
  method = "moving_avg", log.trafo = FALSE
)
}
