pc <- bind_cols(pc, temp)
}
pc
}
tb <- roll(keywords = c("abitur", "abiturnote", "NC"),
start_period = "2007-01-01",
end = "2008-01-01")
############################
#Damit kann unter Angabe von
pca <- function(keywords = NA,
categories = 0,
start = as.Date("2006-01-01"),
end,
components = max(length(keywords), length(categories))){
stopifnot("Nur keywords oder categories darf angegeben werden" = is.na(keywords) | categories == 0)
dates = seq.Date(as.Date(start), as.Date(end), by = "month")
dat = tibble(date = NULL, key = NULL, value = NULL)
for (kw in keywords){
for (cat in categories){
as_tibble(gtrends(
keyword = kw,
category = cat,
geo = "DE",
time = "all")$interest_over_time)  -> temp
if (NROW(temp) == 0) stop(str_c("Keine Daten fÃ¼r Kategorie ", cat))
temp %>%
mutate(date = as_date(date)) %>%
select(date = date, key = any_of(c("keyword", "category")), value = hits) %>%
filter(date %in% dates) -> temp
dat <- bind_rows(dat, temp)
}
}
return(pivot_wider(ts_prcomp(dat), names_from = id, values_from = value)[1:components])
}
pca(keywords = c("abitur", "abiturnote", "NC"), end = "2021-01-01")
############################
#Damit kann unter Angabe von
pca <- function(keywords = NA,
categories = 0,
start = as.Date("2006-01-01"),
end,
components = max(length(keywords), length(categories))){
stopifnot("Nur keywords oder categories darf angegeben werden" = is.na(keywords) | categories == 0)
dates = seq.Date(as.Date(start), as.Date(end), by = "month")
dat = tibble(date = NULL, key = NULL, value = NULL)
for (kw in keywords){
for (cat in categories){
as_tibble(gtrends(
keyword = kw,
category = cat,
geo = "DE",
time = "all")$interest_over_time)  -> temp
if (NROW(temp) == 0) stop(str_c("Keine Daten fÃ¼r Kategorie ", cat))
temp %>%
mutate(date = as_date(date)) %>%
select(date = date, key = any_of(c("keyword", "category")), value = hits) %>%
filter(date %in% dates) -> temp
dat <- bind_rows(dat, temp)
}
}
return(pivot_wider(ts_prcomp(dat), names_from = id, values_from = value)[1:(components+1)])
}
roll <- function(keywords = NA,
categories = 0,
start_series = as.Date("2006-01-01"),
start_period = as.Date("2014-01-01"),
end = as.Date("2021-01-01"),
components = max(length(keywords), length(categories))){
period <-  seq.Date(as.Date(start_period), as.Date(end), by = "month")
dates <- seq.Date(as.Date("2006-01-01"), as.Date(end), by = "month")
pc <- tibble(date = dates)
n <- length(dates)#L?nge der ganzen Reihe
for (i in period){
d <- as.Date(i, origin = "1970-01-01")
pca(keywords = keywords,
categories = categories,
start = start_series,
end = d,
components = components) %>%
select(-time) -> temp
rest <- matrix(NA, n - nrow(temp), components)
colnames(rest) <- str_c("PC", 1:components)
rest <- as_tibble(rest)
temp <- bind_rows(temp, rest)
names(temp) <- str_c(names(temp), " to ", d)
pc <- bind_cols(pc, temp)
}
pc
}
pca(keywords = c("abitur", "abiturnote", "NC"), end = "2021-01-01")
tb <- roll(keywords = c("abitur", "abiturnote", "NC"),
start_period = "2007-01-01",
end = "2008-01-01")
View(tb)
library(tidyverse)
library(gtrendsR)
library(trendecon)
library(tsbox)
library(openxlsx)
library(corrr)
library(lubridate)
proc_keyword_init("arbeitslos", "DE")
proc_index("arbeitslos", "DE", "arbeitslos_ind")
proc_index("arbeitslos", "DE")
library(trendecon)
library(tsbox)
library(gtrendsR)
trendecon:::proc_keyword_latest("arbeitslos", "DE")
d <- proc_keyword_init("arbeitslos", "DE")
trendecon:::proc_keyword_latest("arbeitslos", "DE")
proc_index("arbeitslos", "DE", "arbeitslos_ind")
trendecon:::proc_keyword_latest("arbeitslos", "DE")
library(tidyverse)
library(gtrendsR)
library(trendecon)
library(tsbox)
library(openxlsx)
library(corrr)
library(lubridate)
trendecon:::proc_keyword_latest("arbeitslos", "DE")
proc_index("arbeitslos", "DE", "arbeitslos_ind")
getwd()
proc_keyword_init("arbeitslos", "DE")
?trendecon:::proc_keyword_latest
trendecon:::proc_keyword_latest("arbeitslos", "DE")
trendecon:::proc_keyword_latest
write_keyword
path_keyword
?normalizePath
?tolower
?normalizePath
?path_raw
path_raw
??path_raw
?trendecon:::path_raw
trendecon:::path_raw
path_trendecon()
path_trendecon
proc_keyword_init("arbeitslos", "DE")
remove.packages("trendecon")
library(trendecon)
library(tidyverse)
library(gtrendsR)
library(trendecon)
library(tsbox)
library(openxlsx)
library(corrr)
library(lubridate)
h <- function (keyword = "Insolvenz", geo = "CH")
{
if (length(keyword) > 1)
stop("Only a single keyword is allowed.")
from <- "2018-01-01"
d <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "15 days", windowsize = "6 months",
n_windows = 348, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
d2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-90 days")[2], stepsize = "1 day",
windowsize = "3 months", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
dd <- aggregate_averages(aggregate_windows(d), aggregate_windows(d2))
w <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "11 weeks", windowsize = "5 years",
n_windows = 68, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
w2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-1 year")[2], stepsize = "1 week",
windowsize = "1 year", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
ww <- aggregate_averages(aggregate_windows(w), aggregate_windows(w2))
m <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "15 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
m2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "20 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
mm <- aggregate_averages(aggregate_windows(m), aggregate_windows(m2))
dd <- select(dd, -n)
ww <- select(ww, -n)
mm <- select(mm, -n)
print(dd)
wd <- tempdisagg::td(ww ~ dd, method = "fast", conversion = "mean")
wd <- predict(wd)
mwd <- tempdisagg::td(mm ~ wd, method = "fast", conversion = "mean")
mwd <- predict(mwd)
mwd
}
h("arbeitslos", "DE")
h <- function (keyword = "Insolvenz", geo = "CH")
{
if (length(keyword) > 1)
stop("Only a single keyword is allowed.")
from <- "2019-01-01"
d <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "15 days", windowsize = "6 months",
n_windows = 348, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
d2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-90 days")[2], stepsize = "1 day",
windowsize = "3 months", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
dd <- trendecon:::aggregate_averages(aggregate_windows(d), aggregate_windows(d2))
w <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "11 weeks", windowsize = "5 years",
n_windows = 68, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
w2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-1 year")[2], stepsize = "1 week",
windowsize = "1 year", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
ww <- trendecon:::aggregate_averages(aggregate_windows(w), aggregate_windows(w2))
m <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "15 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
m2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "20 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
mm <- trendecon:::aggregate_averages(aggregate_windows(m), aggregate_windows(m2))
dd <- select(dd, -n)
ww <- select(ww, -n)
mm <- select(mm, -n)
print(dd)
wd <- tempdisagg::td(ww ~ dd, method = "fast", conversion = "mean")
wd <- predict(wd)
mwd <- tempdisagg::td(mm ~ wd, method = "fast", conversion = "mean")
mwd <- predict(mwd)
mwd
}
h("arbeitslos", "DE")
h <- function (keyword = "Insolvenz", geo = "CH")
{
if (length(keyword) > 1)
stop("Only a single keyword is allowed.")
from <- "2019-01-01"
d <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "15 days", windowsize = "6 months",
n_windows = 348, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
d2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-90 days")[2], stepsize = "1 day",
windowsize = "3 months", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
dd <- trendecon:::aggregate_averages(aggregate_windows(d), aggregate_windows(d2))
w <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "11 weeks", windowsize = "5 years",
n_windows = 68, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
w2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-1 year")[2], stepsize = "1 week",
windowsize = "1 year", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
ww <- trendecon:::aggregate_averages(aggregate_windows(w), aggregate_windows(w2))
m <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "15 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
m2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "20 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
mm <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(m), trendecon:::aggregate_windows(m2))
dd <- select(dd, -n)
ww <- select(ww, -n)
mm <- select(mm, -n)
print(dd)
wd <- tempdisagg::td(ww ~ dd, method = "fast", conversion = "mean")
wd <- predict(wd)
mwd <- tempdisagg::td(mm ~ wd, method = "fast", conversion = "mean")
mwd <- predict(mwd)
mwd
}
h <- function (keyword = "Insolvenz", geo = "CH")
{
if (length(keyword) > 1)
stop("Only a single keyword is allowed.")
from <- "2020-01-01"
d <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "15 days", windowsize = "6 months",
n_windows = 348, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
d2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-90 days")[2], stepsize = "1 day",
windowsize = "3 months", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
dd <- trendecon:::aggregate_averages(aggregate_windows(d), aggregate_windows(d2))
w <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "11 weeks", windowsize = "5 years",
n_windows = 68, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
w2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-1 year")[2], stepsize = "1 week",
windowsize = "1 year", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
ww <- trendecon:::aggregate_averages(aggregate_windows(w), aggregate_windows(w2))
m <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "15 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
m2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "20 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
mm <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(m), trendecon:::aggregate_windows(m2))
dd <- select(dd, -n)
ww <- select(ww, -n)
mm <- select(mm, -n)
print(dd)
wd <- tempdisagg::td(ww ~ dd, method = "fast", conversion = "mean")
wd <- predict(wd)
mwd <- tempdisagg::td(mm ~ wd, method = "fast", conversion = "mean")
mwd <- predict(mwd)
mwd
}
h("arbeitslos", "DE")
h <- function (keyword = "Insolvenz", geo = "CH")
{
if (length(keyword) > 1)
stop("Only a single keyword is allowed.")
from <- "2020-01-01"
d <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "15 days", windowsize = "6 months",
n_windows = 348, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
d2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-90 days")[2], stepsize = "1 day",
windowsize = "3 months", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
dd <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(d), trendecon:::aggregate_windows(d2))
w <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "11 weeks", windowsize = "5 years",
n_windows = 68, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
w2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-1 year")[2], stepsize = "1 week",
windowsize = "1 year", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
ww <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(w), trendecon:::aggregate_windows(w2))
m <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "15 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
m2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "20 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
mm <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(m), trendecon:::aggregate_windows(m2))
dd <- select(dd, -n)
ww <- select(ww, -n)
mm <- select(mm, -n)
print(dd)
wd <- tempdisagg::td(ww ~ dd, method = "fast", conversion = "mean")
wd <- predict(wd)
mwd <- tempdisagg::td(mm ~ wd, method = "fast", conversion = "mean")
mwd <- predict(mwd)
mwd
}
h("arbeitslos", "DE")
h <- function (keyword = "Insolvenz", geo = "CH")
{
if (length(keyword) > 1)
stop("Only a single keyword is allowed.")
from <- "2020-01-01"
d <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "15 days", windowsize = "6 months",
n_windows = 348, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
d2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-90 days")[2], stepsize = "1 day",
windowsize = "3 months", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
dd <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(d), trendecon:::aggregate_windows(d2))
w <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "11 weeks", windowsize = "5 years",
n_windows = 68, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
w2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-1 year")[2], stepsize = "1 week",
windowsize = "1 year", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
ww <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(w), trendecon:::aggregate_windows(w2))
m <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "15 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
m2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "20 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
mm <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(m), trendecon:::aggregate_windows(m2))
dd <- select(dd, -n)
ww <- select(ww, -n)
mm <- select(mm, -n)
return(list(mm = mm, dd = dd, ww = ww))
# wd <- tempdisagg::td(ww ~ dd, method = "fast", conversion = "mean")
# wd <- predict(wd)
# mwd <- tempdisagg::td(mm ~ wd, method = "fast", conversion = "mean")
# mwd <- predict(mwd)
# mwd
}
h("arbeitslos", "DE")
h <- function (keyword = "Insolvenz", geo = "CH")
{
if (length(keyword) > 1)
stop("Only a single keyword is allowed.")
from <- "2020-01-01"
d <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "15 days", windowsize = "6 months",
n_windows = 348, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
d2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-90 days")[2], stepsize = "1 day",
windowsize = "3 months", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
dd <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(d), trendecon:::aggregate_windows(d2))
w <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "11 weeks", windowsize = "5 years",
n_windows = 68, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
w2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-1 year")[2], stepsize = "1 week",
windowsize = "1 year", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
ww <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(w), trendecon:::aggregate_windows(w2))
m <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "15 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
m2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "20 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
mm <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(m), trendecon:::aggregate_windows(m2))
dd <- select(dd, -n)
ww <- select(ww, -n)
mm <- select(mm, -n)
return(list(mm = mm, dd = dd, ww = ww))
# wd <- tempdisagg::td(ww ~ dd, method = "fast", conversion = "mean")
# wd <- predict(wd)
# mwd <- tempdisagg::td(mm ~ wd, method = "fast", conversion = "mean")
# mwd <- predict(mwd)
# mwd
}
s <- h("arbeitslos", "DE")
s
s$mm
print(s$mm, n = 315)
print(s$ww, n = 315)
print(s$dd, n = 315)
is.na(s$dd[2])
?tempdisagg::td
tempdisagg::td(s$ww ~ s$dd, method = "fast", conversion = "mean")
s$ww
s[["ww"]]
s$dd
s["ww"]
s$ww[[1]]
tempdisagg::td(s$ww[[2]] ~ s$dd[[2]], method = "fast", conversion = "mean")
tempdisagg::td(s$ww[[2]] ~ s$dd[[2]], to = "day", method = "fast", conversion = "mean")
tempdisagg::td(s$ww[[2]] ~ s$dd, method = "fast", conversion = "mean")
tempdisagg::td(s$ww ~ s$dd, method = "fast", conversion = "mean")
ts(s$ww)
tempdisagg::td(ts(s$ww) ~ ts(s$dd), method = "fast", conversion = "mean")
ts(s$dd)
tempdisagg::td(ts(s$ww) ~ s$dd, method = "fast", conversion = "mean")
ts(s$ww)
str(ts(s$ww))
class(ts(s$ww))
?ts
class(as.ts(s$ww))
tempdisagg::td(as.ts(s$ww) ~ s$dd, method = "fast", conversion = "mean")
s$ww
s$ww[[2]]
tempdisagg::td(s$ww[[2]] ~ s$dd, method = "fast", conversion = "mean")
tempdisagg::td(s$ww[[2]] ~ s$dd, to = 7, method = "fast", conversion = "mean")
tempdisagg::td(s$ww[[2]] ~ s$dd[[2]], to = 7, method = "fast", conversion = "mean")
tempdisagg::td(s$ww[[2]] ~ as.ts(s$dd), to = 7, method = "fast", conversion = "mean")
tempdisagg::td(s$ww[[2]] ~ as.ts(s$dd), method = "fast", conversion = "mean")
s1 <- h("arbeitslos", "DE")
s1 <- h("arbeitslos", "DE")
s1 <- h("arbeitslos", "DE")
s1
h <- function (keyword = "Insolvenz", geo = "CH")
{
if (length(keyword) > 1)
stop("Only a single keyword is allowed.")
from <- "2020-01-01"
d <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "15 days", windowsize = "6 months",
n_windows = 348, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
d2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-90 days")[2], stepsize = "1 day",
windowsize = "3 months", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
dd <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(d), trendecon:::aggregate_windows(d2))
w <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "11 weeks", windowsize = "5 years",
n_windows = 68, wait = 20, retry = 10, prevent_window_shrinkage = TRUE)
w2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = seq(Sys.Date(),
length.out = 2, by = "-1 year")[2], stepsize = "1 week",
windowsize = "1 year", n_windows = 12, wait = 20,
retry = 10, prevent_window_shrinkage = FALSE)
ww <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(w), trendecon:::aggregate_windows(w2))
m <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "15 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
m2 <- trendecon:::ts_gtrends_windows(keyword = keyword, geo = geo, from = from,
stepsize = "1 month", windowsize = "20 years",
n_windows = 12, wait = 20, retry = 10, prevent_window_shrinkage = FALSE)
mm <- trendecon:::aggregate_averages(trendecon:::aggregate_windows(m), trendecon:::aggregate_windows(m2))
dd <- select(dd, -n)
ww <- select(ww, -n)
mm <- select(mm, -n)
#return(list(mm = mm, dd = dd, ww = ww))
wd <- tempdisagg::td(ww ~ dd, method = "fast", conversion = "mean")
#return(list(mm = mm, dd = dd, ww = ww))
wd <- predict(wd)
mwd <- tempdisagg::td(mm ~ wd, method = "fast", conversion = "mean")
mwd <- predict(mwd)
mwd
}
s1 <- h("arbeitslos", "DE")
tempdisagg::td
s
any(is.na(s$ww[[2]]))
any(is.na(s$dd[[2]]))
any(is.na(s$dd))
any(is.na(s$ww))
s <- ts_gtrends_mwd("amazon", "DE")
tibble
library(gtrendsR)
library(trendecon)
gtrends
library(trendecon)
s <- ts_gtrends_mwd("amazon", "DE")
version
